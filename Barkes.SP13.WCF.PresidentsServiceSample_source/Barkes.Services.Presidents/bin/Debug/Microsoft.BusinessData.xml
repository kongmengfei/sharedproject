<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.BusinessData</name>
  </assembly>
  <members>
    <member name="T:Microsoft.BusinessData.Infrastructure.AccessDeniedException">
      <summary>Specifies the exception that is thrown when the Business Data Catalog authorization subsystem detects an access attempt that is not valid.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(Microsoft.BusinessData.Infrastructure.IAccessControlList,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using an access control list (ACL), a securable object type, a securable object name, and an exception helper.</summary>
      <param name="acl">The ACL.</param>
      <param name="securableObjectType">The securable object type.</param>
      <param name="securableObjectName">The securable object name.</param>
      <param name="exh">The exception helper that assists with localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.String,Microsoft.BusinessData.Infrastructure.IAccessControlList,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message, an access control list (ACL), a securable object type, a securable object name, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="acl">The ACL.</param>
      <param name="securableObjectType">The securable object type.</param>
      <param name="securableObjectName">The securable object name.</param>
      <param name="exh">The exception helper that assists with localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.#ctor(System.String,System.Exception,Microsoft.BusinessData.Infrastructure.IAccessControlList,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message, the inner exception, an access control list (ACL), a securable object type, a securable object name, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="acl">The ACL.</param>
      <param name="securableObjectType">The securable object type.</param>
      <param name="securableObjectName">The securable object name.</param>
      <param name="exh">The exception helper that assists with localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Retrieves the object data.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.AccessDeniedException.Message">
      <summary>Gets a generic access-denied error message.</summary>
      <returns>The message string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.AccessDeniedException.SecurableObjectType">
      <summary>Gets the type of the object to which access was denied.</summary>
      <returns>The SecurableObjectType object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.AccessDeniedException.State">
      <summary>Gets the state of the Business Data Catalog exception.</summary>
      <returns>The state of the Business Data Catalog exception.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>A string representing the object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.AccessDeniedExceptionState">
      <summary>Represents the state of the <see cref="T:Microsoft.BusinessData.Infrastructure.AccessDeniedException" /> object.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.AccessDeniedExceptionState.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.AccessDeniedExceptionState.ReconstructException">
      <summary>Reconstructs the exception object.</summary>
      <returns>The Business Data Catalog exception object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.BdcException">
      <summary>Specifies the generic exception that is thrown when a problem occurs.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with an exception helper.</summary>
      <param name="exceptionHelper">The exception helper that assists with localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="exceptionHelper">The exception helper that assists with localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.#ctor(System.String,System.Exception,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message, the inner exception, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="exceptionHelper">The exception helper that assists with localization.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.ExceptionHelper">
      <summary>Represents the exception helper that assists with localization.</summary>
      <returns>The exception helper.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.FillState(Microsoft.BusinessData.Infrastructure.BdcExceptionState)">
      <summary>Provides the state of the exception.</summary>
      <param name="state">The Business Data Catalog exception state.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the exception object data.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.HasExplicitMessage">
      <summary>Determines whether the exception has an explicit message.</summary>
      <returns>true if it has an explicit message; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.IsRetriable">
      <summary>Determines whether it is safe to retry the operation that caused the exception.</summary>
      <returns>true if it is safe to automatically retry the operation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.Message">
      <summary>Gets the exception message.</summary>
      <returns>The message string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.ServerStackTrace">
      <summary>Represents a server stack trace.</summary>
      <returns>The server stack trace string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcException.State">
      <summary>Gets the state of the Business Data Catalog exception.</summary>
      <returns>The state of the Business Data Catalog exception.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.BdcExceptionState">
      <summary>Represents the Business Data Catalog exception state that users can access for marshalling their implementations.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcExceptionState.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.BdcExceptionState.ReconstructException">
      <summary>Contains the stack trace of the server when the exception happens on the server and is caught on the client.</summary>
      <returns>The stack trace of the server.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.BdcRights">
      <summary>Represents the rights that the administrator or someone with the Manage Permissions right can set on a Business Data Catalog application and its metadata objects.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.None">
      <summary>No rights are specified.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.Execute">
      <summary>Specifies rights for executing.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.Edit">
      <summary>Specifies rights for editing.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.SetPermissions">
      <summary>Specifies rights to set permissions.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.UseInBusinessDataInLists">
      <summary>Do not use. Reserved for future use.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.BdcRights.SelectableInClients">
      <summary>Specifies rights that can be selected in the client.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState">
      <summary>Represents the Business Data Catalog run-time exceptions that are thrown, including run-time exceptions for metadata.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState.GetState(Microsoft.BusinessData.Infrastructure.BdcException)">
      <summary>Converts a <see cref="T:Microsoft.BusinessData.Infrastructure.BdcException" /> object to a <see cref="T:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState" /> object that can be transmitted over a Windows Communication Foundation (WCF) connection.</summary>
      <param name="exception">The Business Data Catalog exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.BdcSerializedExceptionState.Rethrow">
      <summary>Throws the exception again.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.HashCode">
      <summary>Provides a wrapper for a byte array that represents a hash value of a larger structure or data element. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.#ctor(System.Byte[])">
      <summary>Constructs the class so that the hash code object can be created with an array of bytes representing the hash value.</summary>
      <param name="hashCode">A byte array that represents the hash value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.#ctor(System.String)">
      <summary>Constructs the class to create the hash code object with a base64-encoded string that contains the bytes representing the hash value.</summary>
      <param name="base64EncodedHashCode">A string that represents the hash value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.Equals(System.Object)">
      <summary>Determines whether one hash value is equal to another.</summary>
      <returns>true if the two hash values are equal; otherwise, false.</returns>
      <param name="obj">The hash value to use for comparison.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.GetHashCode">
      <summary>Returns a hash code value.</summary>
      <returns>An integer that represents the hash code.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.op_Equality(Microsoft.BusinessData.Infrastructure.HashCode,Microsoft.BusinessData.Infrastructure.HashCode)">
      <summary>Overloads the equality operator (==) so that it can be used to test the equality between two hash code values.</summary>
      <returns>true if the hash values are equal; otherwise, false.</returns>
      <param name="left">The hash value on the left.</param>
      <param name="right">The hash value on the right.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.op_Inequality(Microsoft.BusinessData.Infrastructure.HashCode,Microsoft.BusinessData.Infrastructure.HashCode)">
      <summary>Overloads the inequality operator (!=) so that it can be used to test the inequality between two hash code values.</summary>
      <returns>true if the values are not equal to each other; otherwise, false.</returns>
      <param name="left">The hash value on the left.</param>
      <param name="right">The hash value on the right.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.HashCode.Size">
      <summary>Gets the size of the byte array representation of the wrapped hash code.</summary>
      <returns>The size of the byte array.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.HashCode.ToString">
      <summary>Converts the hash value to a string.</summary>
      <returns>The string that represents the hash value.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IAccessControlEntry">
      <summary>Represents an interface for an Access Control Entry (ACE). ACEs represent collections of rights for a particular user, and are bundled up in collections called Access Control Lists (ACLs) that are attached to securable metadata objects.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.IAccessControlEntry.DisplayName">
      <summary>Gets the display name of the user, group, site, or service account in the access control entry.</summary>
      <returns>A string that represents the display name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.IAccessControlEntry.IdentityName">
      <summary>Gets the programmatic name of the security principal.</summary>
      <returns>The programmatic name of the security principal.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.IAccessControlEntry.Rights">
      <summary>Gets the collection of rights assigned with the security principal.</summary>
      <returns>The collection of rights.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IAccessControlList">
      <summary>Defines methods to handle access control entries in the Business Data Catalog.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IAccessControlList.AccessCheck(Microsoft.BusinessData.Infrastructure.BdcRights)">
      <summary>Determines whether the current client context has the specified rights in the Business Data Catalog.</summary>
      <returns>true if the client context has the specified rights; otherwise, false. </returns>
      <param name="rightsMask">The rights for which to check access.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IAccessControlList.Add(Microsoft.BusinessData.Infrastructure.IAccessControlEntry)">
      <summary>Appends an access control entry to the access control list (ACL).</summary>
      <param name="ace">The access control entry given to this ACL.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IAccessControlList.Clear">
      <summary>Removes all access control entries from the access control list (ACL).</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IAccessControlList.Clone">
      <summary>Creates a shallow copy of the current object.</summary>
      <returns>A copy of the access control list (ACL).</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IConnectionManager">
      <summary>Represents an interface for managing connections to an external data system.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IConnectionManager.CloseConnection(System.Object)">
      <summary>Closes the connection.</summary>
      <param name="connection">The connection object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IConnectionManager.FlushConnections">
      <summary>Attempts to flush all connections in any connection pool maintained for the related LobSystemInstance object.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IConnectionManager.GetConnection">
      <summary>Gets a connection to the LobSystemInstance this connection manager was initialized with.</summary>
      <returns>The connection object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IConnectionManager.Initialize(Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Initializes the Connection Manager with the given LobSystem instance.</summary>
      <param name="lobSystemInstance">The LobSystem instance.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IExceptionHelper">
      <summary>Defines methods that assist with localization.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IExceptionHelper.GetLocalizedMessage(Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags)">
      <summary>Returns the localized exception message.</summary>
      <returns>The localized exception message.</returns>
      <param name="tag">The standard exception message tag.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IExceptionHelper.LogEvent(System.String)">
      <summary>Logs the exception event.</summary>
      <param name="message">The localized exception message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IExceptionHelper.TraceMessage(System.String)">
      <summary>Traces the exception message.</summary>
      <param name="message">The localized exception message.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.IRemoteExecutionService">
      <summary>Represents a core Windows Communication Foundation (WCF) Web service running in Microsoft SharePoint Foundation 2010 at the site level. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.IRemoteExecutionService.ExecuteBdcMethod(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String[])">
      <summary>Executes the specified MethodInstance object in the Business Data Catalog metadata.</summary>
      <returns>A stream that contains the results of the execution. The shape of the stream depends on the specific shim that executed the method.</returns>
      <param name="dataClassNamespace">Namespace of the DataClass object that contains the MethodInstance to execute.</param>
      <param name="dataClassName">Name of the DataClass object that contains the MethodInstance to execute.</param>
      <param name="dataClassVersion">The version of the DataClass object that contains the MethodInstance to execute.</param>
      <param name="lobSystemInstanceName">The name of the LobSystemInstance object against which the MethodInstance is executed.</param>
      <param name="methodInstanceName">The name of the MethodInstance to execute.</param>
      <param name="callerLcid">The locale ID of the caller. The implementation of this interface should use this value to send error messages in the language corresponding to the given locale ID.
</param>
      <param name="serializedOverrideArgs">The arguments of the method in XML serialized format based on the metadata.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.ITypeReflector">
      <summary>Represents an interface for instantiating, setting, and getting values from objects in abstract type systems.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Get(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object)">
      <summary>Extracts a portion of an instance in the external system's type system represented by the given TypeDescriptor object that represents the top level of the instance.</summary>
      <returns>The instance that is extracted according to the subtype that corresponds to the  type descriptor that is passed in.</returns>
      <param name="typeDescriptor">A type descriptor that is not at the top level that defines the part of the instance to extract.</param>
      <param name="instanceRootTypeDescriptor">The top-level type descriptor that describes the instance.</param>
      <param name="instance">An instance of a type corresponding to the top-level type descriptor for the type descriptor that is passed in.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Get(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object,System.Int32)">
      <summary>Extracts an instance in the external system's type system specified by the given TypeDescriptor object that represents the collection instance from the specified index.</summary>
      <returns>The index of the specified member of the collection.</returns>
      <param name="collectionTypeDescriptor">A type descriptor that defines a collection; typically, this is not a top-level type descriptor.</param>
      <param name="instanceRootTypeDescriptor">The top-level type descriptor that describes the instance.</param>
      <param name="instance">An instance of a type corresponding to the top-level type descriptor for the type descriptor that is passed in.</param>
      <param name="index">The member of the collection to return.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.GetCollectionSize(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object)">
      <summary>Gets the number of items in the collection.</summary>
      <returns>The number of items in the collection.</returns>
      <param name="collectionTypeDescriptor">A type descriptor that corresponds to this collection.</param>
      <param name="instance">An instance of the collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.GetDotNetType(Microsoft.BusinessData.MetadataModel.ITypeDescriptor)">
      <summary>Gets the actual .NET Framework type of the TypeDescriptor object.</summary>
      <returns>A .NET Framework type.</returns>
      <param name="typeDescriptor">A type descriptor.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Instantiate(Microsoft.BusinessData.MetadataModel.ITypeDescriptor)">
      <summary>Instantiates a type in the external system's type system as described by the provided TypeDescriptor object, using no default values.</summary>
      <returns>An instantiated type corresponding to the type descriptor.</returns>
      <param name="typeDescriptor">A recursive structure describing the type to be created.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Instantiate(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Instantiates a type in the external system's type system as described by the provided TypeDescriptor using default values in the given scope of the MethodInstance.</summary>
      <returns>An instantiated type corresponding to the type descriptor for the given method instance.</returns>
      <param name="typeDescriptor">A recursive structure describing the type to be created.</param>
      <param name="methodInstance">The MethodInstance for which this type is being created.
</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Instantiate(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Int32)">
      <summary>Instantiates a collection type in the external system's type system as described by the provided TypeDescriptor object using no default values.</summary>
      <returns>An instantiated collection corresponding to the type descriptor.</returns>
      <param name="collectionTypeDescriptor">A recursive structure describing the collection type to be created (IList or array).</param>
      <param name="size">The number of empty elements in the instantiated collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Instantiate(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Int32,Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Instantiates a collection type in the external system's type system as described by the provided TypeDescriptor object using default values in the given the scope of the MethodInstance object.</summary>
      <returns>An instantiated collection that corresponds to the type descriptor for the given method instance.</returns>
      <param name="collectionTypeDescriptor">Recursive structure describing the collection type to be created (IList or array).</param>
      <param name="size">The number of empty elements in the instantiated collection.</param>
      <param name="methodInstance">The MethodInstance for which this type is being created.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.ResolveDotNetType(System.String,Microsoft.BusinessData.MetadataModel.ILobSystemStruct)">
      <summary>Gets the actual abstract type name resolution used by the GetDotNetType method.</summary>
      <returns>A .NET Framework type.</returns>
      <param name="abstractTypeName">The abstract type name.</param>
      <param name="lobSystemStruct">The LobSystem object that contains the reference to the abstract type name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Set(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object@,System.Object)">
      <summary>Sets a portion of an instance in the external system's type system represented by the given TypeDescriptor object that represents the top level of the instance.</summary>
      <param name="typeDescriptor">A type descriptor that defines the subtype to be set; typically, this is not a top-level type descriptor.</param>
      <param name="instanceRootTypeDescriptor">The top-level type descriptor that describes the instance.</param>
      <param name="instance">An instance of a type corresponding to the top-level type descriptor for the type descriptor that is passed in.</param>
      <param name="value">An instance of a type corresponding to the type descriptor that is passed in.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.ITypeReflector.Set(Microsoft.BusinessData.MetadataModel.ITypeDescriptor,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object@,System.Object,System.Int32)">
      <summary>Sets an instance in the external system's type system specified by the given TypeDescriptor object that represents the collection instance at the specified index.</summary>
      <param name="typeDescriptor">A type descriptor that defines a collection; typically, this is not a  top-level type descriptor.</param>
      <param name="instanceRootTypeDescriptor">The top-level type descriptor that describes the instance.</param>
      <param name="instance">An instance of a .NET Framework type corresponding to the top-level type descriptor for the type descriptor that is passed in.</param>
      <param name="value">An instance of a .NET Framework type corresponding to the type descriptor that is passed in.</param>
      <param name="index">The member of the collection to set.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Pair`2">
      <summary>Represents a container for a pair of reference type instances.</summary>
      <typeparam name="T1">A reference type.</typeparam>
      <typeparam name="T2">A reference type.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.#ctor(`0,`1)">
      <summary>Constructs a pair of values from the given values.</summary>
      <param name="t1">The first value.</param>
      <param name="t2">The second value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.Equals(System.Object)">
      <summary>Indicates whether the values and the types of values in this pair and the supplied pair are the same.</summary>
      <returns>true if the values and the types of values in this pair and the supplied pair are the same; otherwise, false.</returns>
      <param name="obj">The pair to compare to.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Pair`2.First">
      <summary>Gets the first value in the pair.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.GetHashCode">
      <summary>Gets the hash code of the two reference type instances.</summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Pair`2.IsEmpty">
      <summary>Determines whether either first or second values are null.</summary>
      <returns>true if either first or second values are null; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Pair`2.IsNullOrEmpty">
      <summary>Determines whether either value of the pair is null.</summary>
      <returns>true either value of the pair is null; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.op_Equality(Microsoft.BusinessData.Infrastructure.Pair{`0,`1},Microsoft.BusinessData.Infrastructure.Pair{`0,`1})">
      <summary>Determines whether the values and the types of values in this pair and those in a supplied pair are the same.</summary>
      <returns>true if the values and the types of values in this pair and the supplied pair are the same; otherwise, false.</returns>
      <param name="p1">The first pair to compare.</param>
      <param name="p2">The second pair to compare.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.op_Inequality(Microsoft.BusinessData.Infrastructure.Pair{`0,`1},Microsoft.BusinessData.Infrastructure.Pair{`0,`1})">
      <summary>Determines whether the values and the types of values in this pair and those in a supplied pair are not the same.</summary>
      <returns>true if the values and the types of values in this pair and the supplied pair are not the same; otherwise, false.</returns>
      <param name="p1">The first pair to compare.</param>
      <param name="p2">The second pair to compare.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Pair`2.Second"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.ToString">
      <summary>Provides a string representation of the two values in the pair. </summary>
      <returns>The string representation of the pair.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Pair`2.ToString(System.String)">
      <summary>Replaces the {0} and {1} tokens in the supplied format string with the string values of the first and second values in the pair.</summary>
      <returns>The string representation of the pair.</returns>
      <param name="format">The supplied format.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags">
      <summary>Represents an enumeration that stores a list of tags that correspond to the known interface framework exception types.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.BdcException">
      <summary>Specifies a generic error message with no additional information.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.GenericMetadataObjectException">
      <summary>Specifies an error message parameterized by base message or a metadata object TypeName.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.InvalidMetadataObjectException">
      <summary>Specifies an error message parameterized by a metadata object TypeName, a metadata object Name, a metadata object ID, or an field name that is not valid.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.DuplicateMetadataObjectException">
      <summary>Specifies an error message parameterized by a metadata object TypeName, a metadata object Name, a metadata object ID, or a duplicate field name.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.ExceededMetadataObjectLimitException">
      <summary>Specifies an error message parameterized by a metadata object TypeName.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.InvalidMetadataObjectPropertyException">
      <summary>Specifies an error message parameterized by a metadata object Name, a metadata object TypeName, or an property name that is not valid.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.MetadataObjectNotFoundException">
      <summary>Specifies an error message parameterized by a metadata object TypeName or search criteria.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.AccessDeniedException">
      <summary>Specifies an error message with no parameters.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.UnknownLiteral">
      <summary>Specifies an error message caused by an unknown literal.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.StandardExceptionMessageTags.MetadataObjectLiteral">
      <summary>Specifies an error message caused by a metadata object literal.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Util">
      <summary>This class and its members are reserved for internal use and are not intended to be used in your code.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.Escape(System.String)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
      <returns>Returns 
<see cref="T:System.String" />
.</returns>
      <param name="unescaped"></param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.GetReflectedValue(System.Reflection.MemberInfo,System.Object,Microsoft.BusinessData.MetadataModel.ITypeDescriptor)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="fieldOrProperty"></param>
      <param name="instance"></param>
      <param name="parentTypeForFieldOrProperty"></param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.ProbeType(System.Type,System.String,System.Reflection.BindingFlags)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
      <returns>Returns <see cref="T:System.Reflection.MemberInfo" />.</returns>
      <param name="type"></param>
      <param name="fieldOrPropertyName"></param>
      <param name="bindingFlags"></param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.SetReflectedValue(System.Reflection.MemberInfo,System.Object,Microsoft.BusinessData.MetadataModel.ITypeDescriptor,System.Object)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
      <param name="fieldOrProperty"></param>
      <param name="instance"></param>
      <param name="parentTypeForFieldOrProperty"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Util.Split(System.Char,System.String)">
      <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IList`1" />.</returns>
      <param name="delimiter"></param>
      <param name="str"></param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1">
      <summary>Defines properties and methods that handle read-only collections.</summary>
      <typeparam name="T">The type parameter of the items in the collection.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1.Contains(`0)">
      <summary>Determines whether the collection contains a specific item.</summary>
      <returns>true if the item is found in the collection; otherwise, false.</returns>
      <param name="item">The item to search for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the items of the collection to an array starting at a specified index.</summary>
      <param name="array">The array name.</param>
      <param name="arrayIndex">The index to start at.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>An integer that represents the number of items in the collection.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyCollection`1.Item(System.Int32)">
      <summary>Gets the item at a specified index.</summary>
      <param name="index">The index of the item to be returned.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2">
      <summary>Defines methods and properties that handle read-only dictionary collections.</summary>
      <typeparam name="TKey">The key of the dictionary entry.</typeparam>
      <typeparam name="TValue">The value at the dictionary entry.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>Determines whether the dictionary contains a specific key.</summary>
      <returns>true if the key is found; otherwise, false.</returns>
      <param name="key">The specified key to search for.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.Item(`0)">
      <summary>Gets the item that exists at a specified key.</summary>
      <param name="key">The specified key.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.Keys">
      <summary>Gets the collection of keys in the dictionary.</summary>
      <returns>The collection of keys in the dictionary.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>Determines whether a specified value is stored at a specified key in the dictionary.</summary>
      <returns>true if the value is found; otherwise, false.</returns>
      <param name="key">The specified key.</param>
      <param name="value">The value to search for at the specified key.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyDictionary`2.Values">
      <summary>Gets the collection of values in the dictionary.</summary>
      <returns>The collection of values in the dictionary.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Collections.IReadOnlyNamedDictionary`1">
      <summary>Represents a special implementation of IReadOnlyDictionary, where the key is a string.</summary>
      <typeparam name="TValue">The value parameter.</typeparam>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreCredential">
      <summary>Defines two properties to retrieve the credential type and information.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreCredential.Credential">
      <summary>Retrieves the credential information.</summary>
      <returns>A secure string that contains the credential information.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreCredential.CredentialType">
      <summary>Retrieves the credential type.</summary>
      <returns>A type that indicates the credential type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider">
      <summary>Represents a single sign-on (SSO) provider that can be implemented to replace the default SSO provider.
</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.DeleteCredentials(System.String)"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.GetCredentials(System.String)">
      <summary>Returns the secure store credentials for the specified application identifier. </summary>
      <returns>The collection of credentials.</returns>
      <param name="appId">The target application identifier.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.GetCredentialsUsingTicket(System.String,System.String)">
      <summary>Returns the credentials for the specified ticket and the specified application identifier.</summary>
      <returns>The collection of credentials.</returns>
      <param name="ticket">The ticket to redeem.</param>
      <param name="appId">The target application identifier.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.GetRestrictedCredentials(System.String)">
      <summary>Returns the secure store credentials for the specified target application identifier. </summary>
      <returns>Type: <see cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialCollection" />The collection of credentials.</returns>
      <param name="appId">The target application identifier.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.IssueTicket">
      <summary>Returns a ticket that can be used later to retrieve credentials.</summary>
      <returns>A ticket string (base64 encoded).</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider.ProviderInformation">
      <summary>Provides information about the single sign-on (SSO) provider.</summary>
      <returns>The information about the SSO provider.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderExtended">
      <summary>Extends the <see cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProvider" /> interface by adding the target application information.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderExtended.GetTargetApplication(System.String)">
      <summary>Retrieves a single target application definition.</summary>
      <returns>The metadata (information) about the specified target application. </returns>
      <param name="appId">The target application identifier.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderExtended.GetTargetApplicationFields(System.String)">
      <summary>Retrieves the credential fields returned for the specified target application.</summary>
      <returns>The collection of target application fields.</returns>
      <param name="appId">The target application identifier.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderExtended.GetTargetApplications">
      <summary>Gets a list of target applications.</summary>
      <returns>A list of target applications.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderInformation">
      <summary>Defines properties that retrieve information on the secure store provider.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderInformation.AssemblyName">
      <summary>Gets the assembly name of the provider.</summary>
      <returns>The assembly name of the provider.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderInformation.Vendor">
      <summary>Gets the vendor information.</summary>
      <returns>The vendor information.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreProviderInformation.Version">
      <summary>Gets the version information.</summary>
      <returns>The version information.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition">
      <summary>Defines properties that retrieve information on the target application.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.ContactEmail">
      <summary>Retrieves the e-mail information for the contact.</summary>
      <returns>The e-mail information for the contact.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.CredentialManagementUrl">
      <summary>Retrieves the Uniform Resource Indicator (URI) for managing the credentials.</summary>
      <returns>The URI for managing the credentials.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.FriendlyName">
      <summary>Retrieves the friendly name of the application.</summary>
      <returns>The application friendly name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.Name">
      <summary>Retrieves the target application name.</summary>
      <returns>The target application name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationDefinition.Type">
      <summary>Retrieves the type of the target application.</summary>
      <returns>The target application type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationField">
      <summary>Defines properties that retrieve information on the target application field.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationField.CredentialType">
      <summary>Retrieves the credential type for this field.</summary>
      <returns>The field credential type.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationField.IsMasked">
      <summary>Retrieves a value indicating whether the field should be masked in the user interface.</summary>
      <returns>true to mask the field; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.ITargetApplicationField.Name">
      <summary>Retrieves the name of the field, such as User Name or Password.</summary>
      <returns>The name of the field.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialCollection">
      <summary>Represents a read-only collection class for a secure store credential.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialCollection.#ctor(System.Collections.Generic.IList{Microsoft.BusinessData.Infrastructure.SecureStore.ISecureStoreCredential})">
      <summary>Constructs and initializes the class by using a list of parameters.</summary>
      <param name="creds">The list of credential items.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialCollection.Dispose">
      <summary>Disposes the instance of the secure store credential collection.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException">
      <summary>Represents an exception that is thrown from the SecureStore when the credentials are not available for a given target application.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class with a message and an inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="innerException">The inner exception object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.#ctor(System.String,System.String,System.Uri)">
      <summary>Constructs a new instance of the class with a message and application information.</summary>
      <param name="message">The message text.</param>
      <param name="targetAppId">The target application identifier.</param>
      <param name="url">The credential management URL.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.CredentialManagementUrl">
      <summary>Gets the credential management URL if the application type is an individual application.</summary>
      <returns>Returns <see cref="T:System.Uri" />.The credential management URL.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the Serializationinfo object with information about the exception.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialsNotFoundException.TargetApplicationId">
      <summary>Gets the target application identifier for which the credentials are not available.</summary>
      <returns>Returns <see cref="T:System.String" />.The target application identifier.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType">
      <summary>Represents the enumeration that contains the credential types.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.UserName">
      <summary>Specifies a user name credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.Password">
      <summary>Specifies a password credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.Pin">
      <summary>Specifies a PIN credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.Key">
      <summary>Specifies a key credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.Generic">
      <summary>Specifies a generic credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.WindowsUserName">
      <summary>Specifies the Windows user name credential.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreCredentialType.WindowsPassword">
      <summary>Specifies the Windows password credential.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException">
      <summary>Represents an exception class that is thrown from a SecureStore object.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class with a message and an inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="innerException">The inner exception object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the Serializationinfo object with information about the exception.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor(System.String)"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor(System.String,System.Exception)"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.#ctor(System.String,System.String)"></member>
    <member name="M:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="P:Microsoft.BusinessData.Infrastructure.SecureStore.SecureStoreTargetApplicationNotFoundException.TargetApplicationId"></member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType">
      <summary>Represents the enumeration of the target application types supported by the SecureStore class.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.Individual">
      <summary>Specifies the individual application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.Group">
      <summary>Specifies the group application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.IndividualWithTicketing">
      <summary>Specifies the individual application with ticketing.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.GroupWithTicketing">
      <summary>Specifies the Group application with ticketing.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.RestrictedIndividual">
      <summary>Specifies a restricted individual application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.RestrictedGroup">
      <summary>Specifies a restricted group application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.IndividualWindows">
      <summary>Specifies the individual Windows-based application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.GroupWindows">
      <summary>Specifies the Group windows application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.IndividualWindowsWithTicketing">
      <summary>Specifies the individual Windows-based application with ticketing.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.GroupWindowsWithTicketing">
      <summary>Specifies the group windows application with ticketing.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.RestrictedIndividualWindows">
      <summary>Specifies a restricted individual windows application.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType.RestrictedGroupWindows">
      <summary>Specifies a restricted group windows application.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag">
      <summary>Represents the enumeration of the bitmask flags for the <see cref="T:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationType" /> class.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.IndividualFlag">
      <summary>Specifies the bitmask for individual application (= 0).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.GroupFlag">
      <summary>Specifies the bitmask for group application (=1).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.EnableTicketFlag">
      <summary>Specifies the bitmask for enabling tickets for the application (=2).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.RestrictedFlag">
      <summary>Specifies the bitmask for marking an application as a restricted application (=4).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Infrastructure.SecureStore.TargetApplicationTypeFlag.WindowsCredentialsFlag">
      <summary>Specifies the bitmask for marking the application as one that stores Windows credentials (=8).</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController">
      <summary>Represents the interface implemented by the LoadController class that contains the throttling rules for scopes. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.ContainsThrottleRule(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType)">
      <summary>Determines whether a throttling rule exists for the given ThrottleType object and ThrottleScope object.</summary>
      <returns>true if a throttling rule exists for the given ThrottleType and ThrottleScope; otherwise, false.</returns>
      <param name="throttleScope">The throttle scope for which the throttling rule default value must be returned.</param>
      <param name="throttleType">The throttle type for which the throttling rule default value must be returned.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.GetThrottleRuleDefault(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType)">
      <summary>Returns the default value for the given ThrottleScope object and ThrottleType object.</summary>
      <returns>The default value.</returns>
      <param name="throttleScope">The given throttle scope.</param>
      <param name="throttleType">The given throttle type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.GetThrottleRuleMax(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType)">
      <summary>Returns the maximum value for the given ThrottleScope object and ThrottleType object.</summary>
      <returns>The maximum value.</returns>
      <param name="throttleScope">The given throttle scope.</param>
      <param name="throttleType">The given throttle type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.IsThrottleRuleEnabled(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType)">
      <summary>Determines whether the throttle rule is enabled for a given ThrottleScope object and ThrottleType object .</summary>
      <returns>true if the rule is enabled; otherwise, false</returns>
      <param name="throttleScope">The given throttle scope.</param>
      <param name="throttleType">The given throttle type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Infrastructure.Throttle.ILoadController.OverrideThrottleRuleDefault(Microsoft.BusinessData.SystemSpecific.ThrottleScope,Microsoft.BusinessData.SystemSpecific.ThrottleType,System.Int32)">
      <summary>Overrides the default value set by the administrator.</summary>
      <param name="throttleScope">The given throttle scope.</param>
      <param name="throttleType">The given throttle type.</param>
      <param name="defaultValue">The default value.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.DirectionType">
      <summary>Represents a direction parameter for methods on LobSystem objects.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.DirectionType.In">
      <summary>Specifies an input-only parameter.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.DirectionType.Out">
      <summary>Specifies an output-only parameter.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.DirectionType.InOut">
      <summary>Specifies an input and output parameter.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.DirectionType.Return">
      <summary>Specifies a parameter representing the return value from the final .NET Framework method invocation on the LobSystem object.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException">
      <summary>Represents an exception that is thrown when one or more metadata objects have field values that are equal in a context where this is not allowed.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class, which contains a reference to the metadata object that is causing the problem because it is a duplicate.</summary>
      <param name="duplicateMetadataObject">The duplicate metadata object.</param>
      <param name="duplicateFieldName">The field name on the metadata object that contains the duplicate value.</param>
      <param name="exh">The exception helper that assists in localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data. </summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains textual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message string that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.String,Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a specified error message, the duplicate metadata object instance, and the name of the field that contains the duplicate.</summary>
      <param name="message">The message string that describes the error.</param>
      <param name="duplicateMetadataObject">The duplicate metadata object.</param>
      <param name="duplicateFieldName">The field name on the metadata object that contains the duplicate value.</param>
      <param name="exh">The exception helper that assists in localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message string that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.#ctor(System.String,System.Exception,Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a specified error message, a reference to the inner exception that caused this exception, the duplicate metadata object instance, and the name of the field that contains the duplicate.</summary>
      <param name="message">The message string that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
      <param name="duplicateMetadataObject">The duplicate metadata object.</param>
      <param name="duplicateFieldName">The field name on the metadata object that contains the duplicate value.</param>
      <param name="exh">The exception helper that assists in localization of the error message.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.Message">
      <summary>Retrieves the message of the exception.</summary>
      <returns>The message string.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.DuplicateMetadataObjectException.ToString">
      <summary>Creates and returns a string representation of the current exception.</summary>
      <returns>A string that represents the current exception.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException">
      <summary>Represents the exception that is thrown when the number of metadata objects of a particular type that are loaded into the cache exceeds a predefined limit, or if the number of metadata objects related to another metadata object exceeds a predefined limit.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data. </summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains textual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.String,System.Exception,System.Type,System.Int32,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a specified error message, a reference to the inner exception that caused this exception, the metadata object .NET Framework Type, and the numerical limit that was exceeded.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
      <param name="metadataObjectType">The type of metadata object involved in the limit violation.</param>
      <param name="limit">The numerical value of the limit.</param>
      <param name="exh">The exception helper that assists in the localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.String,System.Type,System.Int32,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a specified error message, the metadata object .NET Framework Type, and the numerical limit that was exceeded.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="metadataObjectType">The type of metadata object involved in the limit violation.</param>
      <param name="limit">The numerical value of the limit.</param>
      <param name="exh">The exception helper that helps localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.#ctor(System.Type,System.Int32,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with the metadata object .NET Framework Type and the numerical limit that was exceeded.</summary>
      <param name="metadataObjectType">The type of metadata object involved in the limit violation.</param>
      <param name="limit">The numerical value of the limit.</param>
      <param name="exh">The exception helper that assists in the localization of the error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains textual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.Limit">
      <summary>Gets or sets the numerical limit that was exceeded.</summary>
      <returns>The numerical value of the limit.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.Message">
      <summary>Gets the exception message.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ExceededMetadataObjectLimitException.ToString">
      <summary>Creates and returns a string representation of the current exception object.</summary>
      <returns>The string representation of the current exception object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.FilterType">
      <summary>Represents the enumeration that identifies the type of the filter descriptor.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Comparison">
      <summary>The back-end system uses the value of this filter to limit the returned items to the result of a comparison (=1).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.LastId">
      <summary>The value of the filter will be used to identify the last item obtained by the caller in an enumeration (=3).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Limit">
      <summary>The back-end system uses the value of this filter to limit the returned items (=4).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.PageNumber">
      <summary>The value of the filter will be used to specify the number of the page that is requested (=5).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Password">
      <summary>The value of the filter will be used to pass SSO password (=6).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.SsoTicket">
      <summary>The value of the filter will be used to pass SSO ticket (=8).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Timestamp">
      <summary>The value of the filter will be used to send time information (=9).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.UserContext">
      <summary>The value of the filter will be used to pass identity of the current user (=10).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Username">
      <summary>The value of the filter will be used to send a single sign-on (SSO) username (=11).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Wildcard">
      <summary>The back-end system uses the value of this filter to limit the returned items to the result of a comparison based on a wildcarded string (=13).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Input">
      <summary>The value of the filter will be sent to back-end. The semantics in which the value will be used by the back-end are unknown (=14).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Output">
      <summary>The value of this filter will represent a result returned by the back-end after execution. The semantics of this value are unknown (=15).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.InputOutput">
      <summary>The value of this filter is sent to back-end and the value will represent a result returned by the back-end after execution. The semantics of this value are unknown (=16).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.Batching">
      <summary>The value of the filter will be used to set and get anchor values when the back-end supports batching (=17).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.BatchingTermination">
      <summary>The value of the filter will be used to identify when there is no more data in a batching function (=18).</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.FilterType.UserCulture">
      <summary>The value of the filter that will be used to send callers locale to the back-end (=19).</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAccessControlledMetadataObject">
      <summary>Represents the internal access control provider interface.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAccessControlledMetadataObject.GetAccessControlList">
      <summary>Retrieves the access control list (ACL) for this object.</summary>
      <returns>The ACL object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAction">
      <summary>Defines methods and properties on an action.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAction.DoesWorkWith(Microsoft.BusinessData.MetadataModel.IView)"></member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAction.GetActionParameters">
      <summary>Returns the parameters of this action.</summary>
      <returns>The collection of action parameters.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAction.GetDataClass"></member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAction.GetParameterizedUrl(Microsoft.BusinessData.Runtime.IInstance)"></member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAction.ImageUrl">
      <summary>Gets a URL to the image that represents the action.</summary>
      <returns>A string representing the image associated with the action.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAction.IsOpenedInNewWindow">
      <summary>Gets a Boolean value that indicates if a new window is opened for the action.</summary>
      <returns>true if opened; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAction.Position">
      <summary>Gets the position of the action.</summary>
      <returns>The number that represents the position of the action.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAction.Url">
      <summary>Gets the URL to go to when the action is clicked.</summary>
      <returns>The URL string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IActionParameter">
      <summary>Defines the parameters that the action URL accepts.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IActionParameter.GetAction">
      <summary>Gets the action object that is associated with the <see cref="T:Microsoft.BusinessData.MetadataModel.IActionParameter" /> object.</summary>
      <returns>An action object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IActionParameter.Index">
      <summary>Gets the index of the parameter.</summary>
      <returns>A number that represents the index.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAssociation">
      <summary>Represents a relationship between two or more related entities within line-of-business (LOB) systems.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociation.AssociationGroup">
      <summary>Gets the association group for this association.</summary>
      <returns>The association group.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociation.DestinationReference">
      <summary>Gets a reference to the destination entity.</summary>
      <returns>A reference to the destination entity.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociation.GetDestination">
      <summary>Returns the destination entity of the association.</summary>
      <returns>
        <see cref="T:Microsoft.BusinessData.MetadataModel.IEntity" />. The destination entity.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociation.GetSources">
      <summary>Returns the source entities in an association.</summary>
      <returns>
        <see cref="T:Microsoft.BusinessData.MetadataModel.Collections.INamespacedEntityDictionaryDictionary" />. An entity collection object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociation.IsBound">
      <summary>Indicates whether this association has all entity references available.</summary>
      <returns>true if the association has all entity references available; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociation.SourceReferences">
      <summary>Gets the collection of references to source entities.</summary>
      <returns>The collection of references to source entities.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAssociationGroup">
      <summary>Represents an association between entities.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationGroup.DestinationReference"></member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetAssociator">
      <summary>Returns the Associator of this association, which is an object that implements the IAssociation interface.</summary>
      <returns>An object that implements the IAssociation interface.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetBulkAssociatedIdEnumerator(Microsoft.BusinessData.MetadataModel.IEntity)">
      <summary>Returns the associated identity enumerators of this association.</summary>
      <returns>The associated identity enumerators.</returns>
      <param name="source">The source entity.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetBulkNavigators">
      <summary>Returns a collection of <see cref="T:Microsoft.BusinessData.MetadataModel.IAssociation" /> objects.</summary>
      <returns>A collection of <see cref="T:Microsoft.BusinessData.MetadataModel.IAssociation" /> objects.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetDestination">
      <summary>Returns the destination entity of the association.</summary>
      <returns>The destination entity of the association.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetDisassociator">
      <summary>Returns the Disassociator of this association, which is an object that implements the IAssociation interface.</summary>
      <returns>The Disassociator object of this association.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetNavigators">
      <summary>Returns the navigators of this association.</summary>
      <returns>The collection of navigators of this association.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetReverseBulkAssociatedIdEnumerator">
      <summary>Returns the reverse associated identity enumerators of this association.</summary>
      <returns>The reverse associated identity enumerators.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetReverseBulkNavigators">
      <summary>Returns the navigators of this collection of <see cref="T:Microsoft.BusinessData.MetadataModel.IAssociation" /> objects..</summary>
      <returns>The navigators of this collection of <see cref="T:Microsoft.BusinessData.MetadataModel.IAssociation" /> objects.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetReverseNavigators">
      <summary>Returns the reverse navigators of this association.</summary>
      <returns>The collection of reverse navigators.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.GetSources">
      <summary>Returns the collection of Entity Instances of the sources.</summary>
      <returns>The collection of Entity Instances of the sources.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationGroup.IsBound"></member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IAssociationGroup.IsReverse(Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Determines whether the given association is a reverse association.</summary>
      <returns>true if the association is in the group and is reverse; otherwise, false.</returns>
      <param name="association">The Association object that implements the IAssociation interface.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationGroup.SourceReferences"></member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IAssociationReference">
      <summary>Represents a reference to an association.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationReference.Entity">
      <summary>Gets a reference to the entity that defines the association.</summary>
      <returns>A reference to the entity that defines the association.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IAssociationReference.Name">
      <summary>Gets the name of the association.</summary>
      <returns>The name of the association.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IDataClass">
      <summary>Defines properties and methods that support a data class, which represents the base class of all entities.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IDataClass.Catalog">
      <summary>Gets the catalog this data class is coming from.</summary>
      <returns>The catalog this data class is coming from.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.ContainsDefaultAction"></member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.Execute(Microsoft.BusinessData.MetadataModel.IMethodInstance,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Executes the given method instance against a given LobSystem instance.</summary>
      <returns>The value of the method.</returns>
      <param name="methodInstanceToExecute">The method instance to execute.</param>
      <param name="lobSystemInstance">The given LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.Execute(Microsoft.BusinessData.MetadataModel.IMethodInstance,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Object[]@)">
      <summary>Executes the given method instance against a given LobSystem instance with the given parameters.</summary>
      <returns>The value of the method.</returns>
      <param name="methodInstanceToExecute">The method instance to execute.</param>
      <param name="lobSystemInstance">The given LobSystem instance.</param>
      <param name="overrideArgs">The override arguments array.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetActions"></member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetDefaultAction"></member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetLobSystem">
      <summary>Gets the LobSystem of this data class.</summary>
      <returns>The LobSystem of this data class.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetMethodInstance(System.String,Microsoft.BusinessData.MetadataModel.MethodInstanceType)">
      <summary>Gets the method instance with this name with the given stereotype.</summary>
      <returns>The method instance.</returns>
      <param name="name">The name of the method instance.</param>
      <param name="stereotype">The stereotype of method instance to return.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetMethodInstances">
      <summary>Gets the method instances of this data class.</summary>
      <returns>The method instances of this data class.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetMethodInstances(Microsoft.BusinessData.MetadataModel.MethodInstanceType)">
      <summary>Gets the method instances of this data class with the given stereotype.</summary>
      <returns>The method instances of this data class with the given stereotype.</returns>
      <param name="stereotype">The stereotype of method instances to return.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IDataClass.GetMethods">
      <summary>Gets the methods of this data class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IDataClass.Namespace">
      <summary>Gets the namespace of this data class.</summary>
      <returns>The namespace of this data class.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IDataClass.Version">
      <summary>Gets the version of this entity.</summary>
      <returns>The version of this entity.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IEntity">
      <summary>Represents an entity such as Customer or Product, in a line-of-business (LOB) application.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Associate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Associates the given source entity instances with the given destination entity instance.</summary>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="destinationEntityInstance">The destination instance.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">An LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.BulkEnumerateAssociatedIds(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets pairs of source identities and destination identity for existing associated entity instances with the default OperationMode object and the default filters.</summary>
      <returns>The pairs of source identities and destination identity.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="associatedIdEnumerator">The associated IdEnumerator method to use.</param>
      <param name="lsi">The LobSystem instance to use.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.BulkEnumerateAssociatedIds(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets pairs of source identities and destination identity for existing associated entity instances with the default OperationMode object and the specified filter collection.</summary>
      <returns>Pairs of source identities and destination identity.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="associatedIdEnumerator">The associated IdEnumerator method to use.</param>
      <param name="filters">The filters to use.</param>
      <param name="lsi">The LobSystem instance to use.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.BulkEnumerateIdentities(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Enumerates the given identities.</summary>
      <returns>An enumerator.</returns>
      <param name="identities">The given identities.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CheckAccess(Microsoft.BusinessData.Runtime.Identity[],Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the access rights of the given entity instance identities for the given LobSystem instance.</summary>
      <returns>A long number representing access rights.</returns>
      <param name="instanceIdentities">The instance identities.</param>
      <param name="lobSystemInstance">An LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an entity instance.</summary>
      <returns>The identity of the created entity instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="lsi">An LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an entity instance that is associated with other entity instances.</summary>
      <returns>The identity of the created entity instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="associatedInstances">The entity instances that are associated with this instance during creation.</param>
      <param name="lsi">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an entity instance.</summary>
      <returns>The identity of the created entity instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="lsi">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Create(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an entity instance.</summary>
      <returns> The identity of the created entity instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="associatedInstances">The entity instances that are associated with this instance during creation.</param>
      <param name="lsi">LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an entity instance, and sets all fields of the entity to the given values with an update.</summary>
      <returns>A reference to the newly created instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="lsi">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Creates an entity instance with a LOB system instance, a specific operation mode, and sets all fields of the entity to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="lsi">The LOB system instance.</param>
      <param name="mode">The mode in which to create the entity instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an entity instance associated with other entity instances, and sets all fields of the entity to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="associatedInstances">The entity instances that are associated with this instance during creation.</param>
      <param name="lsi">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Creates an entity instance, with a specific OperationMode object, associated with other entity instances, and sets all fields of the entity to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="associatedInstances">The entity instances that are associated with this instance during creation.</param>
      <param name="lsi">The LOB system instance.</param>
      <param name="mode">The mode in which to create the entity instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates an entity instance with an assigned identity, and sets all fields of the entity to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="lsi">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Creates an entity instance with an assigned identity and a specific OperationMode object, and sets all fields of the entity to the given values with an update.</summary>
      <returns>A reference to the new instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="lsi">The LOB system instance.</param>
      <param name="mode">The mode in which to create the entity instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Creates a new entity instance with a specific identity, associated with other entity instances, and sets all fields of the entity to the given values with an update.</summary>
      <returns>A reference to the newly created instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity to be assigned to the instance.</param>
      <param name="associatedInstances">The entity instances that are associated with this instance during creation.</param>
      <param name="lsi">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.CreateWithFields(Microsoft.BusinessData.Runtime.IFieldValueDictionary,Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Creates an entity instance with a specific identity and OperationMode object, associated with other entity instances, and sets all fields of the entity to the given values with an update.</summary>
      <returns>A reference to the newly created instance.</returns>
      <param name="fieldValues">The parameters of the Create method.</param>
      <param name="assignedIdentity">The identity that is assigned to the instance.</param>
      <param name="associatedInstances">The entity instances that are associated with this instance during creation.</param>
      <param name="lsi">The LOB system instance.</param>
      <param name="mode">The mode in which to create the entity instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.Disassociate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Disassociates the given source entity instances from the given destination entity instance.</summary>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="destinationEntityInstance">The destination instance.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateChangedIdentities(System.DateTime,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Enumerates the identities of a changed entity instance.</summary>
      <returns>The enumerator to entity instances with minimal data.</returns>
      <param name="timeStamp">A timestamp.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateDeletedIdentities(System.DateTime,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Enumerates the identities of a deleted entity instance.</summary>
      <returns>The enumerator to entity instances with minimal data.</returns>
      <param name="timeStamp">A timestamp.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.EnumerateIdentities(Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Enumerates identities.</summary>
      <returns>The enumerator to entity instances with minimal data.</returns>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IEntity.EstimatedInstanceCount">
      <summary>Gets the number of expected instances of this entity.</summary>
      <returns>The number of expected instances.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.ExecuteScalar(System.String,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Executes a scalar MethodInstance object with the given name, filters values, and the given LobSystemInstance object, and returns the result.</summary>
      <returns>The result object.</returns>
      <param name="methodInstanceName">Name of the method instance.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The given LobSystemInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the EntityInstance objects that are associated with a given source EntityInstance object.</summary>
      <returns>An enumerator to the entity instances.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the entity instances that are associated with a given source entity instance with a given OperationMode object.</summary>
      <returns>An enumerator to the entity instances.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
      <param name="mode">The operation mode to read the entity instances.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the EntityInstance objects that are associated with a given source entity instance and selected with given filter values.</summary>
      <returns>An enumerator to the entity instances.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="association">The association to use.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociated(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the EntityInstance objects that are associated with a given source EntityInstance object selected with given filter values and with a given OperationMode object.</summary>
      <returns>An enumerator to the entity instances.</returns>
      <param name="sourceEntityInstances">The source instances.</param>
      <param name="association">The association to use.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
      <param name="mode">operation mode to read the entity instances.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the entity instances that are associated to the given source entity instances.</summary>
      <returns>The entity instances that are associated to the given source entity instances.</returns>
      <param name="sourceEntityInstances">The source entity instances.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the entity instances that are associated to the given source entity instances by using a specified OperationMode object.</summary>
      <returns>The entity instances that are associated to the given source entity instances.</returns>
      <param name="sourceEntityInstances">The source entity instances.</param>
      <param name="association">The association to use.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
      <param name="mode">The OperationMode object to read the entity instances.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the entity instances that are associated to the given source entity instances by applying a specified filter collection.</summary>
      <returns>The entity instances that are associated to the given source entity instances.</returns>
      <param name="sourceEntityInstances">The source entity instances.</param>
      <param name="association">The association to use.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindAssociatedMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.EntityInstanceCollection},Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the entity instances that are associated to the given source entity instances by applying a specified filter collection and using a specified OperationMode object.</summary>
      <returns>The entity instances that are associated to the given source entity instances.</returns>
      <param name="sourceEntityInstances">The source entity instances.</param>
      <param name="association">The association to use.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LobSystem instance.</param>
      <param name="mode">The OperationMode object to read the entity instances.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindFiltered(Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the EntityInstance objects selected with given filter values using the default Finder MethodInstance object.</summary>
      <returns>An enumerator to the entity instances.</returns>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindFiltered(Microsoft.BusinessData.Runtime.IFilterCollection,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the EntityInstance objects selected with given filter values using the Finder MethodInstance object with the given name.</summary>
      <returns>An enumerator to the entity instances.</returns>
      <param name="filterCollection">The filters to apply.</param>
      <param name="finderName">The name of the finder.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindFiltered(Microsoft.BusinessData.Runtime.IFilterCollection,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the EntityInstance objects selected with given filter values using the Finder MethodInstance object with the given name and the given OperationMode object.</summary>
      <returns>An enumerator to the entity instances.</returns>
      <param name="filterCollection">The filters to apply.</param>
      <param name="finderName">The name of the finder.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
      <param name="mode">The OperationMode object to read the entity instances.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the entity instance with the given identity for the default SpecificFinder MethodInstance object.</summary>
      <returns>An entity instance.</returns>
      <param name="identity">The given identity.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Boolean)">
      <summary>Gets the entity instance with the given identity for the default SpecificFinder MethodInstance object with an option to read immediately or on the first function call that requires a read.</summary>
      <returns>An entity instance.</returns>
      <param name="identity">The identity of the entity instance.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
      <param name="readNow">true to read the data immediately; otherwise, the data is read on the first function call that requires a read.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the entity instance with the given identity for a SpecificFinder MethodInstance object.</summary>
      <returns>An entity instance.</returns>
      <param name="identity">The identity of the entity instance.</param>
      <param name="specificFinderName">The name of the SpecificFinder MethodInstance object.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the entity instance with the given identity for a specific SpecificFinder MethodInstance object with the given OperationMode object.</summary>
      <returns>An entity instance.</returns>
      <param name="identity">The identity of the entity instance.</param>
      <param name="specificFinderName">The name of the SpecificFinder MethodInstance object.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
      <param name="mode">The OperationMode object to read the entity instances.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode,System.Boolean)">
      <summary>Gets the entity instance with the given identity for a specific SpecificFinder MethodInstance object and a given OperationMode object, with an option to read the data immediately or read it on the first function call that requires a read.</summary>
      <returns>An entity instance.</returns>
      <param name="identity">The identity of the entity instance.</param>
      <param name="specificFinderName">The name of the SpecificFinder MethodInstance object.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
      <param name="mode">The OperationMode object to read the entity instances.</param>
      <param name="readNow">true to read the data immediately; otherwise, the data is read on the first function call that requires a read.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecific(Microsoft.BusinessData.Runtime.Identity,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Boolean)">
      <summary>Gets the entity instance with the given identity for a specific SpecificFinder MethodInstance object and a given LobSystem instance, with an option to read the data immediately or read it on the first function call that requires a read.</summary>
      <returns>An entity instance.</returns>
      <param name="identity">The identity of the entity instance.</param>
      <param name="specificFinderName">The name of the SpecificFinder MethodInstance object.</param>
      <param name="lobSystemInstance">The LOB system instance.</param>
      <param name="readNow">true to read the data immediately; otherwise, the data is read on the first function call that requires a read.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecificMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets a group of entity instances given their identities by using the default OperationMode object and the BulkSpecificFinder Method Instance.</summary>
      <returns>A group of entity instances.</returns>
      <param name="identities">The set of identities to retrieve entity instances for.</param>
      <param name="lsi">The LobSystem instance to execute the bulk specific finder against.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecificMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets a group of entity instances given their identities by using the default OperationMode object.</summary>
      <returns>A group of entity instances.</returns>
      <param name="identities">The set of identities to retrieve entity instances for.</param>
      <param name="bulkSpecificFinderName">The name of the BulkSpecificFinder MethodInstance to execute.</param>
      <param name="lsi">The LobSystem instance to execute the BulkSpecificFinder MethodInstance against.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.FindSpecificMultiple(System.Collections.Generic.IList{Microsoft.BusinessData.Runtime.Identity},System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets a group of entity instances given their identities.</summary>
      <returns>A group of entity instances.</returns>
      <param name="identities">The set of identities to retrieve entity instances for.</param>
      <param name="bulkSpecificFinderName">The name of the BulkSpecificFinder MethodInstance object to execute.</param>
      <param name="lsi">The LobSystem instance to execute the BulkSpecificFinder MethodInstance object against.</param>
      <param name="mode">The OperationMode object to use when executing the BulkSpecificFinder MethodInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetAssociationGroups">
      <summary>Gets all the association groups of this entity.</summary>
      <returns>All the association groups of this entity.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetAssociationView(Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Gets the View object of the association.</summary>
      <returns>The View object of the association.</returns>
      <param name="association">The association to get the View object for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetBulkIdentityEnumeratorView">
      <summary>Gets the View object for the ID enumerator.</summary>
      <returns>The View object for the ID enumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetBulkSpecificFinderView(System.String)">
      <summary>Gets the View object for the given BulkSpecificFinder MethodInstance object.</summary>
      <returns>The View object for the given BulkSpecificFinder MethodInstance object.</returns>
      <param name="methodInstanceName">The name of the MethodInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetChangedIdentityEnumeratorView">
      <summary>Gets the View object for the changed IdEnumerator method.</summary>
      <returns>The View object for the changed IDs.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetCreatorView(System.String)">
      <summary>Gets the View object for the given creator.</summary>
      <returns>The View object for the given creator.</returns>
      <param name="methodInstanceName">Name of the specific finder or a creator.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDefaultBulkSpecificFinderView">
      <summary>Gets the View object for the default BulkSpecificFinder MethodInstance object.</summary>
      <returns>The View object for the BulkSpecificFinder MethodInstance object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDefaultFinderFilters">
      <summary>Gets the filters for the default Finder object.</summary>
      <returns>The filter collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDefaultOperationMode">
      <summary>Gets the default OperationMode object for this entity.</summary>
      <returns>The default OperationMode object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDefaultSpecificFinderView">
      <summary>Gets the View object for the default SpecificFinder MethodInstance object.</summary>
      <returns>The View object for the default SpecificFinder MethodInstance object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDeletedIdentityEnumeratorView">
      <summary>Gets the View object for the deleted ID enumerator.</summary>
      <returns>The View object for the deleted ID enumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetDestinationAssociations">
      <summary>Gets the associations in which this entity is a destination.</summary>
      <returns>The associations in which this entity is a destination.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetFinderView(System.String)">
      <summary>Gets the View object for the given Finder MethodInstance object.</summary>
      <returns>The View object of the finder.</returns>
      <param name="methodInstanceName">The name of the Finder MethodInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetIdentifierCount">
      <summary>Gets the number of identifiers of this entity.</summary>
      <returns>The number of identifiers.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetIdentifiers">
      <summary>Gets identifiers of this entity.</summary>
      <returns>The collection of identifiers.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetIdentityEnumeratorView">
      <summary>Gets the View object for the ID enumerator.</summary>
      <returns>The View object for the ID enumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetSecurityDescriptor(Microsoft.BusinessData.Runtime.Identity,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the security descriptor of the entity instance with the given identity, and the LobSystem instance.</summary>
      <returns>The security descriptor.</returns>
      <param name="id">The identity of the entity instance.</param>
      <param name="lsi">The LobSystem instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetSourceAssociations">
      <summary>Gets the collection of associations in which this entity is a source.</summary>
      <returns>The collection of associations in which this entity is a source.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetSpecificFinderView(System.String)">
      <summary>Gets the View object for the given SpecificFinder MethodInstance object.</summary>
      <returns>The View object for the SpecificFinder MethodInstance object.</returns>
      <param name="methodInstanceName">The name of the SpecificFinder MethodInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IEntity.GetUpdaterView(System.String)">
      <summary>Gets the View object for the given updater.</summary>
      <returns>The View object for the updater.</returns>
      <param name="updaterName">The name of the updater.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IEntityReference">
      <summary>Represents a reference to an Entity object.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IEntityReference.Name">
      <summary>Gets the name of the Entity object.</summary>
      <returns>The name of the Entity.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IEntityReference.Namespace">
      <summary>Gets the namespace of the Entity object.</summary>
      <returns>The namespace of the Entity.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IField">
      <summary>Represents a Field object in a View object, which maps to a child TypeDescriptor returned by a MethodInstance object.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.ContainsLocalizedDisplayName">
      <summary>Determines whether the field contains the localized display name of the Field object.</summary>
      <returns>true if the field contains the localized display name; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.DefaultDisplayName">
      <summary>Retrieves the default display name of the Field object.</summary>
      <returns>The default display name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.LocalizedDisplayName">
      <summary>Retrieves the localized display name of the Field object.</summary>
      <returns>The localized display name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.Name">
      <summary>Retrieves the name of the Field object.</summary>
      <returns>The name of the field.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IField.TypeDescriptor">
      <summary>Retrieves the TypeDescriptor object that describes this Field object.</summary>
      <returns>The type descriptor.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IFilterDescriptor">
      <summary>Describes the metadata of a filter.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.FilterField">
      <summary>Retrieves the Field object in the view that is affected by the result of this filter, described by dot path notation.</summary>
      <returns>The field affected by the result of the filter.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.FilterType">
      <summary>Retrieves the type of the filter.</summary>
      <returns>The type of the filter.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.GetMethod">
      <summary>Returns the method that has this filter.</summary>
      <returns>The method that has this filter.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.GetTypeDescriptors">
      <summary>Retrieves the type descriptors associated with this filter.</summary>
      <returns>The type descriptors associated with the filter.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IFilterDescriptor.Type">
      <summary>Retrieves the type of the filter implementation.</summary>
      <returns>The type of the filter implementation.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IIdentifier">
      <summary>Defines the properties of an entity identifier as well as a method to get the corresponding entity.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IIdentifier.GetEntity">
      <summary>Returns the entity identified by this identifier.</summary>
      <returns>The entity identified by this identifier.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IIdentifier.IdentifierType">
      <summary>Retrieves the type of the identifier.</summary>
      <returns>The type of the identifier.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IIdentifier.OrdinalNumber">
      <summary>Retrieves the ordinal number of the identifier.</summary>
      <returns>The ordinal number of the identifier.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IIdentifierReference">
      <summary>Represents a reference to an identifier.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IIdentifierReference.Entity">
      <summary>Gets a reference to the Entity object that contains the identifier.</summary>
      <returns>A reference to the Entity that contains the identifier.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IIdentifierReference.Name">
      <summary>Gets the name of the identifier.</summary>
      <returns>The name of the identifier.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ILobSystem">
      <summary>Defines the properties and methods that handle an LobSystem object.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystem.Catalog">
      <summary>Retrieves the Catalog that this ILobSystem object is coming from.</summary>
      <returns>The Catalog that this ILobSystem object is coming from.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystem.GetDataClasses">
      <summary>Returns the data classes of this LobSystem object.</summary>
      <returns>The collection of the data classes.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystem.GetEntities">
      <summary>Returns the entities that belong to this Lob system.</summary>
      <returns>The collection of the entities.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystem.GetLobSystemInstances">
      <summary>Returns the instances of this LobSystem object.</summary>
      <returns>The collection of LobSystem instances.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ILobSystemInstance">
      <summary>Defines methods and properties that handle an LobSystemInstance object.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.AssociateConnection(System.Object)">
      <summary>Associates the given connection to the current thread of control, which is then used for all operations executed on this thread. </summary>
      <param name="connection">The given connection to associate.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.CloseConnection">
      <summary>Closes the connection to this instance of the ILobSystem object.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.CurrentConnection">
      <summary>Retrieves the current connection to this LobSystem instance.</summary>
      <returns>The current connection object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.DisassociateConnection">
      <summary>Disassociates the current thread from any connection object. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.FlushConnections">
      <summary>Flushes the connections to this LobSystem instance.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.GetDataClasses">
      <summary>Returns the data classes of the LobSystem object of this instance.</summary>
      <returns>The collection of data classes.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.GetEntities">
      <summary>Returns the entities of the LobSystem object of this instance.</summary>
      <returns>The collection of entities.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.GetLobSystem">
      <summary>Returns the LobSystem object of this instance.</summary>
      <returns>The LobSystem of the instance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ILobSystemInstance.OpenConnection">
      <summary>Opens a connection to this LobSystem instance.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ILobSystemStruct">
      <summary>Represents the metadata fields of a LobSystemstruct.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystemStruct.ConnectionManagerType">
      <summary>Gets the type of the connection manager.</summary>
      <returns>The type of the connection manager.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystemStruct.SystemType">
      <summary>Gets the type of the system.</summary>
      <returns>The type of the system.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ILobSystemStruct.SystemUtilityType">
      <summary>Gets the type of the system utility.</summary>
      <returns>The type of the system utility.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMetadataCatalog">
      <summary>Represents an entry point for the run-time functionality.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.CreateExecutionContext">
      <summary>Creates an execution context.</summary>
      <returns>The execution context.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.CurrentExecutionContext">
      <summary>Gets the currently active execution context.</summary>
      <returns>The currently active execution context.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetEntities(System.String)">
      <summary>Retrieves entities with names that match the given name that uses a wild card.</summary>
      <returns>A dictionary of entities that are grouped by namespace.</returns>
      <param name="wildcardedName">The name that uses a wild card.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetEntities(System.String,System.String)">
      <summary>Retrieves entities with names that match the given name that uses a wild card in the given namespace.</summary>
      <returns>A dictionary of entities that uses the entity name as the key.</returns>
      <param name="namespace">The given namespace. Namespace strings are case sensitive.</param>
      <param name="wildcardedName">The name that uses a wild card.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetEntity(System.String,System.String)">
      <summary>Gets the entity with the given name and namespace.</summary>
      <returns>The required entity. Entity names are case sensitive.</returns>
      <param name="namespace">The given namespace. Namespace strings are case sensitive.</param>
      <param name="name">The given name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetLoadController">
      <summary>Returns the load controller that is associated with the IMetadataCatalog object.</summary>
      <returns>The load controller.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetLobSystem(System.String)">
      <summary>Gets the LobSystem object with the given name.</summary>
      <returns>The LobSystem object.</returns>
      <param name="name">The given name. Name strings are case sensitive.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.GetLobSystems(System.String)">
      <summary>Gets the LobSystem objects with names that match the given wild-carded name.</summary>
      <returns>The collection of LobSystem objects.</returns>
      <param name="wildcardedName">The given name that uses a wild card.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataCatalog.Helper">
      <summary>Retrieves a run-time helper implementation that is associated with this catalog.</summary>
      <returns>The run-time helper that is associated with the catalog.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMetadataObject">
      <summary>Represents a metadata object. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.ContainsLocalizedDisplayName">
      <summary>Determines whether this metadata object contains a localized display name.</summary>
      <returns>true if it contains a localized display name; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.GetDefaultDisplayName">
      <summary>Returns the default display name of this metadata object.</summary>
      <returns>The default display name of this metadata object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.GetLocalizedDisplayName">
      <summary>Returns the localized display name of this metadata object.</summary>
      <returns>The localized display name of this metadata object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.GetLocalizedNames">
      <summary>Returns the localized names of this metadata object.</summary>
      <returns>The collection of localized names of this metadata object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMetadataObject.GetProperties">
      <summary>Returns the properties of this metadata object.</summary>
      <returns>The collection of properties of this metadata object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMetadataStruct">
      <summary>Represents any metadata struct, and includes data fields but excludes behavior and logic.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataStruct.Id">
      <summary>Gets the identifier (ID) of the metadata object.</summary>
      <returns>The ID of the metadata object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataStruct.IsCached">
      <summary>Determines whether the metadata object is cached in memory.</summary>
      <returns>true if cached in memory; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMetadataStruct.Name">
      <summary>Gets the name of the metadata object.</summary>
      <returns>The name of the metadata object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMethod">
      <summary>Defines properties and methods that handle a method on an entity.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.CreateDefaultParameterInstances(Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Creates default values of the parameters for the given method instance.</summary>
      <returns>The object array containing parameters.</returns>
      <param name="methodInstance">The method instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetDataClass">
      <summary>Returns the data class of this method.</summary>
      <returns>The data class of this method.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetFilterDescriptors">
      <summary>Returns the filter descriptors of this method.</summary>
      <returns>A collection of filter descriptors.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetFilters(Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Returns the filters for this method for the given method instance.</summary>
      <returns>A collection of filters.</returns>
      <param name="methodInstance">The method instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetMethodInstances">
      <summary>Returns the method instances of this method.</summary>
      <returns>A collection of method instances.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetParameters">
      <summary>Returns the parameters of this method.</summary>
      <returns>A collection of parameters of the method.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethod.GetSystemFilterDescriptors">
      <summary>Returns the system filter descriptors of this method.</summary>
      <returns>A collection of filter descriptors.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethod.IsStatic">
      <summary>Determines whether the method is static.</summary>
      <returns>true if the method is static; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethod.LobName">
      <summary>Retrieves the name of the method on the Lob side.</summary>
      <returns>The name of the method on the Lob side.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IMethodInstance">
      <summary>Defines methods and properties that handle a method instance on an entity.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethodInstance.GetFilters">
      <summary>Gets the filters of this method instance.</summary>
      <returns>A collection of filters of the method.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethodInstance.GetMethod">
      <summary>Gets the method that this instance belongs to.</summary>
      <returns>The method this instance belongs to.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IMethodInstance.GetReturnTypeDescriptor">
      <summary>Gets the type descriptor of this method instance.</summary>
      <returns>The type descriptor of this method instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethodInstance.HasReturnTypeDescriptor">
      <summary>Determines whether the method instance has a return type descriptor.</summary>
      <returns>true if it has a return type descriptor; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethodInstance.IsDefault">
      <summary>Determines whether this method instance is the default instance. </summary>
      <returns>true if it is the default; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IMethodInstance.MethodInstanceType">
      <summary>Retrieves the type of the method instance.</summary>
      <returns>The type of the method instance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException">
      <summary>Represents the exception that is thrown if the metadata object you are trying to access or create is not valid.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a metadata object, a field name, and an exception helper.</summary>
      <param name="metadataObject">The metadata object that is not valid.</param>
      <param name="fieldName">The field name that is not valid.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.String,Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message, a metadata object, a field name, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="metadataObject">The metadata object.</param>
      <param name="fieldName">The field name that is not valid.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.#ctor(System.String,System.Exception,Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using a message, the inner exception, the metadata object that is not valid, the field name that is not valid, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="invalidMetadataObject">The metadata object that is not valid.</param>
      <param name="invalidFieldName">The field name that is not valid.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the object serialization and streaming data.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.Initialize(Microsoft.BusinessData.MetadataModel.IMetadataObject,System.String)">
      <summary>Initializes the exception object.</summary>
      <param name="metadataObject">The metadata object.</param>
      <param name="fieldName">The field name.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.InvalidFieldName">
      <summary>Represents the field that is not valid.</summary>
      <returns>The field name string that is not valid.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.InvalidMetadataObject">
      <summary>Represents the metadata object that is not valid.</summary>
      <returns>The metadata object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.Message">
      <summary>Represents the exception message.</summary>
      <returns>The message string.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataObjectException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>A string representing the object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException">
      <summary>Represents the exception that is thrown if a metadata property is not valid.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The serialization context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class with a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String,System.Exception,System.String,System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a message, an inner exception, a property name that is not valid, a metadata object name, a metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="invalidPropertyName">The property name that is not valid.</param>
      <param name="metadataObjectName">The metadata object name.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String,System.String,System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a message, a property name that is not valid, a metadata object name, a metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="invalidPropertyName">The property name that is not valid.</param>
      <param name="metadataObjectName">The metadata object name.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.String,System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using the property name that is not valid, a metadata object name, a metadata object type, and an exception helper.</summary>
      <param name="invalidPropertyName">The property name that is not valid.</param>
      <param name="metadataObjectName">The metadata object name.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.#ctor(System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class by using the metadata object type and an exception helper.</summary>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Retrieves object serialization and streaming data.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.InvalidPropertyName">
      <summary>Represents the name of the property that is not valid.</summary>
      <returns>The name of the property that is not valid.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.Message">
      <summary>Gets the exception message string.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.MetadataObjectName">
      <summary>Gets or sets the name of the metadata object that contains the property that is not valid.</summary>
      <returns>The name of the metadata object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.InvalidMetadataPropertyException.ToString">
      <summary>Converts the object to a string.</summary>
      <returns>The object as a string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IParameter">
      <summary>Represents the in, in-out, out, and return parameters of each method.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IParameter.CreateDefaultInstance(Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Creates an instance of this parameter with the default value associated with the specified method instance by using the TypeReflector object associated with the parameter.</summary>
      <returns>An instance of the parameter.</returns>
      <param name="forMethodInstance">The MethodInstance object.
</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IParameter.Direction">
      <summary>Gets the direction of the parameter.</summary>
      <returns>The direction of the parameter.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IParameter.GetMethod">
      <summary>Gets the method that this object is a parameter of.</summary>
      <returns>The method that this object is a parameter of.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IParameter.GetRootTypeDescriptor">
      <summary>Gets the top-level (root) type descriptor object.</summary>
      <returns>The root type descriptor object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IParameter.OrdinalNumber">
      <summary>Gets the ordinal number of the parameter in the method signature.</summary>
      <returns>The ordinal number of the parameter.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IParameter.TypeReflector">
      <summary>Gets the TypeReflector object of the TypeDescriptor object.</summary>
      <returns>The TypeReflector object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.ITypeDescriptor">
      <summary>Defines a data type that is used as a parameter on methods.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.ContainsFilterDescriptor">
      <summary>Determines whether this type descriptor or one of its children contains a filter descriptor.</summary>
      <returns>true if the type descriptor or one of its children contains a filter descriptor; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.ContainsIdentifier">
      <summary>Determines whether this type descriptor or one of its children defines an identifier.</summary>
      <returns>true if the type descriptor or one of its children defines an identifier; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.ContainsReadOnly">
      <summary>Determines whether this type descriptor or one of its children is read-only.</summary>
      <returns>true if this type descriptor or one of its children is read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.Flags">
      <summary>Retrieves flags of this type descriptor.</summary>
      <returns>Flags of the type descriptor.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetAssociation">
      <summary>Returns the association of this type descriptor, if it is set.</summary>
      <returns>The association of the type descriptor.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetChildTypeDescriptors">
      <summary>Returns the child type descriptor objects.</summary>
      <returns>The collection of the child type descriptors.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetFilterDescriptor">
      <summary>Retrieves the filter descriptors of this type descriptor, if any are set.</summary>
      <returns>The filter descriptors of the type descriptor.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetIdentifier">
      <summary>Returns the identifier of the type descriptor, if it is set.</summary>
      <returns>The identifier of the type descriptor.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetParameter">
      <summary>Returns the parameter of this type descriptor.</summary>
      <returns>The parameter of this type descriptor.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.GetParentTypeDescriptor">
      <summary>Returns the parent type descriptor, if this type descriptor object is not a top-level (root) object.</summary>
      <returns>The parent type descriptor.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.InterpretedTypeName">
      <summary>Retrieves the interpreted type name.</summary>
      <returns>A string that contains the interpreted type name.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsAssociationSet">
      <summary>Determines whether this type descriptor object has an association set.</summary>
      <returns>true if this type descriptor has an association set; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsCollection">
      <summary>Determines whether the described type is a collection.</summary>
      <returns>true if the type is a collection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsFilterDescriptorSet">
      <summary>Determines whether this type descriptor object has a filter descriptor set.</summary>
      <returns>true if the type descriptor object has a filter descriptor set; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsIdentifierSet">
      <summary>Determines whether this type descriptor object has an identifier set.</summary>
      <returns>true if the type descriptor object has an identifier set; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsLeaf">
      <summary>Determines whether this type descriptor is a leaf.</summary>
      <returns>true if the type descriptor is a leaf; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsReadOnly">
      <summary>Determines whether this type descriptor object is read-only.</summary>
      <returns>true if the type descriptor object is read-only; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.IsRoot">
      <summary>Determines whether this type descriptor is a top-level (root) object.</summary>
      <returns>true if the type descriptor is a root; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.LobName">
      <summary>Retrieves the name of the field on the line-of-business (LOB) application.</summary>
      <returns>The name of the field on the LOB application.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.TryGetDefaultValue(Microsoft.BusinessData.MetadataModel.IMethodInstance,System.Object@)">
      <summary>Attempts to get the type descriptor, and the return value tells you if it is successful.</summary>
      <returns>true if the value is found; otherwise, false.</returns>
      <param name="forMethodInstance">The given method instance.</param>
      <param name="value">The returned default value.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.ITypeDescriptor.TypeName">
      <summary>Retrieves the name of the type.</summary>
      <returns>The name of the type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.IView">
      <summary>Represents a collection of fields, where fields are the data members of an entity.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IView.Entity">
      <summary>Gets the entity the view belongs to.</summary>
      <returns>The entity the view belongs to.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IView.Fields">
      <summary>Gets the collection of fields in the view.</summary>
      <returns>The collection of fields in the view.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.GetDefaultValues">
      <summary>Gets a field value dictionary that contains the default values for this view.</summary>
      <returns>The field value dictionary that contains the default values for this view.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.GetType(System.String)">
      <summary>Gets the common language runtime type of the TypeDescriptor object that corresponds to a given dot notation.</summary>
      <returns>The common language runtime type of the TypeDescriptor.</returns>
      <param name="fieldDotNotation">The given dot notation.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.GetTypeDescriptor(System.String)">
      <summary>Gets the TypeDescriptor object that corresponds to the given dot notation.</summary>
      <returns>The TypeDescriptor object that corresponds to the given dot notation.</returns>
      <param name="fieldDotNotation">The given dot notation.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.GetXmlSchema">
      <summary>Gets the XML schema of the view.</summary>
      <returns>The XML schema of the view.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IView.Name">
      <summary>Gets the name of this View object. </summary>
      <returns>The name of this View object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.IView.RelatedSpecificFinderName">
      <summary>Retrieves the name of the specific finder MethodInstance that this view is tied to.</summary>
      <returns>The name of the specific finder MethodInstance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.IView.Verify(System.String)">
      <summary>Verifies whether the given dot notation maps to a TypeDescriptor object on this view.</summary>
      <returns>true if the given dot notation maps to a type descriptor on this view; otherwise, false.</returns>
      <param name="fieldDotNotation">The given dot notation.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.MetadataException">
      <summary>Represents a base exception class that is thrown when the runtime engine encounters miscellaneous issues with Business Connectivity Services (BCS) metadata.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.String,System.Exception,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a message, the inner exception, the metadataObjectType object, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a message, metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.#ctor(System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with the metadata object type and an exception helper.</summary>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the information about the metadata object that caused the exception.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.MetadataException.Message">
      <summary>Represents the error message.</summary>
      <returns>The error message.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.MetadataException.MetadataObjectType">
      <summary>Gets or sets the type of the metadata object that caused the exception.</summary>
      <returns>The metadata object that caused the exception.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>The exception object string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException">
      <summary>Represents the exception thrown if the requested metadata object cannot be found in the Business Data Catalog.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class with a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.String,System.Exception,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a message, the inner exception, the metadata object type, the search criteria, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="searchCriteria">The search criteria.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.String,System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a message, the metadata object type, the search criteria, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="searchCriteria">The search criteria.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.#ctor(System.Type,System.String,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Constructs a new instance of the class with a search criteria, a metadata object type, and an exception helper.</summary>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="searchCriteria">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class with serialization information and streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.Message">
      <summary>Returns the exception message string.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.SearchCriteria">
      <summary>Returns the exception search criteria.</summary>
      <returns>The search criteria.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MetadataObjectNotFoundException.ToString">
      <summary>Converts the object to a string.</summary>
      <returns>The object as a string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.MethodInstanceType">
      <summary>Represents the type of a <see cref="T:Microsoft.Office.Server.ApplicationRegistry.MetadataModel.MethodInstance" /> object.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Finder">
      <summary>Specifies MethodInstance objects of the type Finder that find one or more instances of an entity in a line-of-business system. These instances typically support filters to define the subset of instances to return. (=(byte)1)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.SpecificFinder">
      <summary>Specifies MethodInstance objects of the type SpecificFinder thatfind a single instance of an entity, given its primary identifiers. (=(byte)2)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.GenericInvoker">
      <summary>Specifies MethodInstance objects of type GenericInvoker that execute arbitrary bits of business logic on an entity. (=(byte)4)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.IdEnumerator">
      <summary>Enumerates all existing identities of an entity by returning EntityInstance with only an identity and the LastModifiedDate fields. (=(byte)5)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Scalar">
      <summary>Specifies a method that returns a scalar such as an Int, String, or other primitive type. This method tells the Business Data Catalog not to wrap the return value as an EntityInstance object. (=(byte)6)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.AccessChecker">
      <summary>Specifies a method that returns an array of access rights for the current user for an array of instances of an entity that is passed in as input. Each element of the array corresponds to the current user's rights for the corresponding EntityInstance object in the input. (=(byte) 7)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Creator">
      <summary>Creates an instance of the entity. (=(byte)8)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Updater">
      <summary>Updates the entity instance. (=(byte)9)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Deleter">
      <summary>Deletes the entity instance. (=(byte)10)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.ChangedIdEnumerator">
      <summary>Enumerates identities of entity instance that are changed, based on specified criteria. (=(byte)11)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.DeletedIdEnumerator">
      <summary>Enumerates identities of entity instances which are deleted, based on specified criteria. (=(byte)12)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.AssociationNavigator">
      <summary>Finds associated entity instances. (=(byte)13)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Associator">
      <summary>Associates two entity instances. (=(byte)14)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.Disassociator">
      <summary>Removes the association between two entity instances. (=(byte)15)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.StreamAccessor">
      <summary>Executes an operation that returns a stream. (=(byte)16)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BinarySecurityDescriptorAccessor">
      <summary>Fetches a binary security descriptor for an instance of an entity. (=(byte)17)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BulkSpecificFinder">
      <summary>Specifies MethodInstance objects of type BulkSpecificFinder that find multiple instances of an entity at one time, given their primary identifiers. (=(byte)20)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BulkAssociatedIdEnumerator">
      <summary>Represents a stereotype that returns the sets of identity values of all participants of the association, given one of the participants of the association. (=(byte)22)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BulkAssociationNavigator">
      <summary>Specifies MethodInstance objects of type BulkAssociationNavigator that find destinations of an association for given sources. This field expects a set of source entity primary identifier(s). (=(byte)23)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.MethodInstanceType.BulkIdEnumerator">
      <summary>Enumerates all given identities of an entity by returning EntityInstance objects that have only an identifier and the LastModifiedDate fields. (=(byte)24)</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException">
      <summary>Specifies the exception that is thrown when a particular metadata object instance does not have an expected property.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a message.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.String,System.Exception,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a message, the inner exception, the metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.String,System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with a message, the metadata object type, and an exception helper.</summary>
      <param name="message">The message string.</param>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.MissingMetadataPropertyException.#ctor(System.Type,Microsoft.BusinessData.Infrastructure.IExceptionHelper)">
      <summary>Initializes a new instance of the class with the metadata object type and an exception helper.</summary>
      <param name="metadataObjectType">The metadata object type.</param>
      <param name="exh">The exception helper that assists in localization.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.SystemType">
      <summary>Represents an enumerator that identifies the type of the LobSystem object.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.Database">
      <summary>Specifies that the back-end system is a database. (=1)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.WebService">
      <summary>Specifies that the back-end system is a Web service. (=2)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.Custom">
      <summary>Specifies custom back-end system connection logic. (=6)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.Wcf">
      <summary>Specifies the back-end system is a Windows Communication Foundation Web service. (=8)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.SystemType.DotNetAssembly">
      <summary>Specifies that the back-end system is a .NET Framework assembly. (=9)</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags">
      <summary>Describes flags for a type descriptor, such as whether the type descriptor is read-only, or whether the type descriptor is used as a field in a creator view.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.None">
      <summary>Specifies that there are no flags for the type descriptor. (=0x0)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.CreatorField">
      <summary>Determines whether this TypeDescriptor is used as a field in a creator view. (=0x1)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.UpdaterField">
      <summary>Determines whether this TypeDescriptor object is used as an updatable field in a related SpecificFinder view. (=0x2)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.PreUpdaterField">
      <summary>Determines whether this TypeDescriptor object is used as a field in a related SpecificFinder object view for update purposes, where the expected value of the field is the original value just before the update is applied. (=0x4)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.IsCollection">
      <summary>Specifies an output parameter's TypeDescriptor object to denote that the child represents a structure in which this TypeDescriptor is a collection. This field is unset on an input parameter's TypeDescriptor to construct an initialized list of input values through default values specified for each child TypeDescriptor. (=0x8)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.ReadOnly">
      <summary>Denotes whether the element that corresponds to the TypeDescriptor object can be altered during an update operation. (=0x1)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.MetadataModel.TypeDescriptorFlags.Significant">
      <summary>Denotes whether the element corresponding to the TypeDescriptor object is used in computing the hash value that represents whether or not there are changes to the EntityInstance. (=0x20)</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IEntityReferenceCollection">
      <summary>Represents a collection of IEntityReference objects.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.Collections.IEntityReferenceCollection.Item(System.String,System.String)">
      <summary>Gets the entity reference with the given namespace and name.</summary>
      <returns>A reference with the given namespace and name.</returns>
      <param name="namespace">The namespace of the reference.</param>
      <param name="name">The name of the reference.</param>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IFieldCollection">
      <summary>Represents the collection of fields of the current view.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IFilterDescriptorCollection">
      <summary>Represents the collection of filter descriptors.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IIdentifierCollection">
      <summary>Represents the collection of identifiers.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.ILocalizedNameDictionary">
      <summary>Represents a collection of localized names, indexed by locale identifiers (LCIDs).</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedActionDictionary">
      <summary>Represents the collection of named actions.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedActionParameterDictionary">
      <summary>Represents the collection of named action parameters. </summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedAssociationDictionary">
      <summary>Represents the collection of named associations.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedAssociationGroupDictionary">
      <summary>Represents the collection of named association groups.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedDataClassDictionary">
      <summary>Represents the collection of named data classes. For more information, see <see cref="T:Microsoft.BusinessData.MetadataModel.IDataClass" />.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedEntityDictionary">
      <summary>Represents the collection of named entities.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedLobSystemDictionary">
      <summary>Represents the collection of named line-of-business (LOB) systems.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedLobSystemInstanceDictionary">
      <summary>Represents the collection of line-of-business (LOB) system instances.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedMethodDictionary">
      <summary>Represents the collection of named methods.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedMethodInstanceDictionary">
      <summary>Represents the collection of named method instances.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamedPropertyDictionary">
      <summary>Represents the collection of named properties.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamespacedDataClassDictionaryDictionary">
      <summary>Represents the collection of the data classes of a line-of-business (LOB) system.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.Collections.INamespacedDataClassDictionaryDictionary.GetEnumerator">
      <summary>Gets an enumerator of entities in this dictionary.</summary>
      <returns>An enumerator of entities in this dictionary.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.INamespacedEntityDictionaryDictionary">
      <summary>Represents the collection of the entities of this line-of-business system.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.MetadataModel.Collections.INamespacedEntityDictionaryDictionary.EntityCount">
      <summary>Gets the number of entities in the collection.</summary>
      <returns>The number of entities in the collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.MetadataModel.Collections.INamespacedEntityDictionaryDictionary.GetEnumerator">
      <summary>Gets an enumerator to the entity collection.</summary>
      <returns>An enumerator to the entity collection.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.IParameterCollection">
      <summary>Represents the collection of parameters of a method.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.MetadataModel.Collections.ITypeDescriptorCollection">
      <summary>Provides contextual information about a component, such as its container and property descriptor.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus">
      <summary>Represents the enumeration of the authoritative data status.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus.Fresh">
      <summary>Indicates the authoritative data is valid and complies with the freshness requirements specified by the relevant cache subscriptions.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus.Stale">
      <summary>Indicates the authoritative data is valid, but is no longer fresh according to at least one cache subscription or the default (global) staleness setting.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus.Obsolete">
      <summary>Indicates the authoritative data was valid at some point, but due to a local operation, it is very likely or true that the state of its data no longer reflects the expected back-end state.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.AuthoritativeDataStatus.Invalid">
      <summary>Indicates the authoritative data is not valid because it was either constructed locally and does not represent the back-end state, or it is internally inconsistent. Invalid is a transient state the system needs to perform initial population of the authoritative row; however, after it is fully populated with back-end data, it never returns to the Invalid status.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException"></member>
    <member name="M:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException.#ctor"></member>
    <member name="M:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException.#ctor(System.String)"></member>
    <member name="M:Microsoft.BusinessData.Offlining.CannotUpgradeWithPendingOperationsException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.BusinessData.Offlining.ConflictData">
      <summary>Represents the struct of the conflict data.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.ConflictData.authoritativeValue">
      <summary>Specifies the authoritative value of the conflicting data in the cache.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.ConflictData.currentValue">
      <summary>Specifies the current value of the conflicting data in the cache.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.ConflictData.fieldFullName">
      <summary>Specifies full name of the field.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.ConflictData.fieldName">
      <summary>Specifies name of the field.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IAssociationOperation">
      <summary>Defines properties that handle the association operation between two entities.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAssociationOperation.Association">
      <summary>Retrieves the association of the operation.</summary>
      <returns>The association of the operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAssociationOperation.Destination">
      <summary>Gets the destination identity of association operation.</summary>
      <returns>The destination identity.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAssociationOperation.Sources">
      <summary>Gets the source identities of the association operation.</summary>
      <returns>The collection of the source identities.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation">
      <summary>Defines properties that handle authoritative data.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.ExpireAfter">
      <summary>Retrieves the time at which the next refresh will be made.</summary>
      <returns>The time of the next refresh.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.LastException">
      <summary>Retrieves the exception information for the last refresh attempt if it failed. </summary>
      <returns>The exception information for the last refresh attempt. If the last refresh attempt succeeded, the exception information is null.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.LastRefreshed">
      <summary>Retrieves the timestamp that reflects the last time the authoritative fields were refreshed from the back-end. </summary>
      <returns>The timestamp of the last refresh of the authoritative fields.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.RetryCount">
      <summary>Retrieves the number of refresh retry attempts.</summary>
      <returns>The refresh retry count.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation.Status">
      <summary>Indicates whether the authoritative data is fresh, stale, obsolete, or invalid.</summary>
      <returns>The status of the authoritative data.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ICacheChangeInfo">
      <summary>Represents an interface that tracks the change information for an item in the cache.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ICacheChangeInfo.GetOfflineEntityInstance">
      <summary>Gets the entity instance that changed.</summary>
      <returns>The entity instance that changed.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ICacheChangeInfo.Identity">
      <summary>Retrieves the identity of the changed item.</summary>
      <returns>The identity of the changed item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ICacheChangeInfo.IsDeleted">
      <summary>Determines whether the deletion of the entity is reported.</summary>
      <returns>true if the deletion of the entity delete is reported; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ICacheChangeInfo.Token">
      <summary>Retrieves a token that represents the number of the change.</summary>
      <returns>The change number.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IEntityInstanceReferenceCollection">
      <summary>Represents a collection of entity instance references.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IEntityOperation">
      <summary>Represents the operations that are performed on an entity.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IEntityOperation.GetPreviousState">
      <summary>Returns the field values that contain the previous state of the operation.</summary>
      <returns>The field values containing the previous state of the operation.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IEntityOperation.GetResultingState">
      <summary>Returns the field values containing the result of the operation.</summary>
      <returns>The field values containing the result of the operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IEntityOperation.Identity">
      <summary>Retrieves the identity of the entity instance to which the operation applies.</summary>
      <returns>The identity of the entity instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IEntityOperation.View">
      <summary>Retrieves the view of the operation.</summary>
      <returns>The view of the operation.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.InternalCacheDatabaseException">
      <summary>Represents an exception that is thrown when an error is encountered while executing a query on the internal cache database.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InternalCacheDatabaseException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InternalCacheDatabaseException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InternalCacheDatabaseException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.InvalidTokenForViewException">
      <summary>Represents an exception class that is thrown when the token belongs to a previously installed version of the view.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InvalidTokenForViewException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InvalidTokenForViewException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.InvalidTokenForViewException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IOfflineEntityInstance">
      <summary>Represents an interface that defines methods and properties that handle the offline external item.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.CancelAllInstanceOperations">
      <summary>Cancels all the operations of this external item.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetAssociationOperations">
      <summary>Gets the association operations where this external item is either the source or target.</summary>
      <returns>The association operations.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetAuthoritativeData">
      <summary>Gets the authoritative data of the current view.</summary>
      <returns>The authoritative data of the current view.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetAuthoritativeData(Microsoft.BusinessData.Offlining.IAuthoritativeDataInformation@)">
      <summary>Gets the authoritative data regardless of whether it is valid.</summary>
      <returns>The authoritative data.</returns>
      <param name="authoritativeDataInformation">If the authoritative data exists, it is returned regardless of whether it is valid. </param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetConflictData(Microsoft.BusinessData.Offlining.ConflictData[]@)">
      <summary>Gets an array of conflict data.</summary>
      <param name="conflictData">The array of the conflicting data.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetFailedAssociationOperations">
      <summary>Gets the collection of the failed association operations.</summary>
      <returns>The collection of the failed association operations.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetFailedOperation">
      <summary>Gets the failed operation.</summary>
      <returns>The failed operation.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.GetLastOperation">
      <summary>Gets the most recent pending operation, if there is one.</summary>
      <returns>The most recent pending operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.HasAssociationErrors">
      <summary>Determines whether the external item has association errors.</summary>
      <returns>true if it has association errors; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.IsAuthoritative">
      <summary>Determines whether the external item is authoritative.</summary>
      <returns>true if authoritative; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.MakeObsolete">
      <summary>Forces a cache refresh of the instance by marking the authoritative data state as obsolete.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.ReplaceChanges">
      <summary>Clears the error/conflict in the entity instance and updates it with new values. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.RequestRefresh">
      <summary>Forces a cache refresh of the instance by marking the next refresh time as now.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOfflineEntityInstance.SynchronizationStatus">
      <summary>Retrieves an enumeration of the synchronization status.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.Offlining.SynchronizationStatus" />.The enumeration value that indicates the synchronization status.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IOperation">
      <summary>Defines methods and properties that handle offline operations.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.CancelAllDependentOperations">
      <summary>Cancels the current operation and all operations that depend on it.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.CancelSingleOperation">
      <summary>Cancels a single operation.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.Entity">
      <summary>Retrieves the external content type of the operation.</summary>
      <returns>The external content type of the operation.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.GetAllDependencies">
      <summary>Gets the collection of all operations this operation depends on.</summary>
      <returns>The collection of all operations that this operation depends on.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.GetDependentOperations">
      <summary>Gets the collection of all operations that depend on the current one.</summary>
      <returns>The collection of all operations that depend on the current one.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.GetDirectDependencies">
      <summary>Gets the collection of operations that this operation is directly dependent on.</summary>
      <returns>The collection of operations this operation is directly dependent on.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.Id">
      <summary>Retrieves the unique identifier of the operation.</summary>
      <returns>The unique identifier of the operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.LastException">
      <summary>Retrieves the last exception thrown when executing the operation.</summary>
      <returns>The last exception thrown when executing the operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.LastExecuted">
      <summary>Retrieves the date and time of the operation that was executed last.</summary>
      <returns>The date and time of the operation that was executed last.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.LobSystemInstance">
      <summary>Retrieves the external system instance object that the operation is executed against.</summary>
      <returns>external system instance object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.MethodInstanceType">
      <summary>Retrieves the MethodInstanceType value of the operation.</summary>
      <returns>The MethodInstanceType value of the operation.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.NextRetryAfter">
      <summary>Retrieves the earliest date or time after which the task should be retried.</summary>
      <returns>The earliest date or time after which the task should be retried.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.OperationStatus">
      <summary>Retrieves the status of the operation.</summary>
      <returns>The status of the operation.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.IOperation.Retry">
      <summary>Retries the operation.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IOperation.RetryCount">
      <summary>Retrieves the count of retries on the operation. </summary>
      <returns>The number of retries.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IOperationCollection">
      <summary>Represents the interface of operation collections.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.IProgressSummary">
      <summary>Defines properties that handle item processing.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IProgressSummary.Failed">
      <summary>Retrieves the number of items that failed processing.</summary>
      <returns>The number of items that failed processing.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IProgressSummary.Pending">
      <summary>Retrieves the number of items that are pending processing.</summary>
      <returns>The number of pending items.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.IProgressSummary.Total">
      <summary>Retrieves the total number of items to process.</summary>
      <returns>The total number of items to process.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscription">
      <summary>Represents a client-only interface, which defines methods and properties that handle subscriptions.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.AddTemporaryMember(Microsoft.BusinessData.Runtime.Identity)">
      <summary>Adds an existing offline external item to the list of subscription members of the subscription.</summary>
      <param name="id">The identity identifier.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.Associations">
      <summary>Gets the collection of association definitions used to populate the subscription.</summary>
      <returns>The collection of association definitions.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.CancelHighPriorityRefresh">
      <summary>Cancels a high priority request for refreshing the subscription.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.Enabled">
      <summary>Gets or sets whether the subscription is enabled.</summary>
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.EntityVersion">
      <summary>Gets the external content type version.</summary>
      <returns>The external content type version.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.ExpireAfter">
      <summary>Indicates how often to refresh the cache subscription.</summary>
      <returns>The time span after which a refresh is due.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetAssociationProgressSummary">
      <summary>Returns the progress information about associations to navigate for the subscription.</summary>
      <returns>The progress information about associations.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetChangedMembers(System.Int64)">
      <summary>Returns the members of the subscription that were added or modified since the previous call, as identified by the token. </summary>
      <returns>A list of member external items.</returns>
      <param name="token">The members token.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetMemberCount">
      <summary>Returns the member count of this subscription.</summary>
      <returns>The member count.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetMemberProgressSummary">
      <summary>Returns the progress information about instances to refresh for the subscription.</summary>
      <returns>The progress information about instances to refresh.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetMembers">
      <summary>Returns the members of the subscription.</summary>
      <returns>The members of the subscription.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetQueryProgressSummary">
      <summary>Returns the progress information about queries of the subscription.</summary>
      <returns>The progress information about queries.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.GetStatus">
      <summary>Returns the status of the subscription.</summary>
      <returns>The status of the subscription.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.Identities">
      <summary>Gets the collection of subscription identities.</summary>
      <returns>The collection of subscription identities.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.LastRefreshed">
      <summary>Gets the time when the last refresh of the subscription is completed.</summary>
      <returns>The time when the last refresh of the subscription is completed.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.LobSystemInstance">
      <summary>Gets the LobSystem instance of the subscription.</summary>
      <returns>The LobSystem instance of the subscription.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.Queries">
      <summary>Returns the collection of query definitions that are used to populate the subscription.</summary>
      <returns>The collection of query definitions.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.RefreshStatus">
      <summary>Gets the refresh status of the cache subscription.</summary>
      <returns>The refresh status of the cache subscription.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.RequestRefresh">
      <summary>Triggers the refresh process for the cache subscription.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.RequestRefresh(System.Boolean)">
      <summary>Triggers the refresh process for the cache subscription with a high priority.</summary>
      <param name="priority">A Boolean value to set the refresh as high priority.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscription.Update">
      <summary>Updates the cache subscription definition information.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscription.View">
      <summary>Gets the view for which the cache subscription applies.</summary>
      <returns>The view for which the cache subscription applies.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionAssociation">
      <summary>Defines methods and properties to handle subscription associations. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.Delete">
      <summary>Deletes the SubscriptionAssociation object from the association collection of the subscription cache.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.DestinationSubscription">
      <summary>Gets or sets a pointer to the subscription for the view returned by this association.</summary>
      <returns>A pointer to the subscription.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.Enabled">
      <summary>Gets or sets whether the subscription association is enabled.</summary>
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.ExpireAfter">
      <summary>Indicates how often to refresh the cache subscription association.</summary>
      <returns>The time span after which to refresh the cache.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.Filters">
      <summary>Retrieves a collection of values that must be passed as input parameters to the query.</summary>
      <returns>The collection of values to pass as input parameters.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.LobSystemInstance">
      <summary>Gets or sets an external system instance.</summary>
      <returns>An external system instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.MethodInstance">
      <summary>Gets or sets the method instance definition for the association.</summary>
      <returns>The method instance definition.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.SourceSubscription">
      <summary>Gets a back-pointer to the subscription object that contains this association.</summary>
      <returns>A back-pointer to the subscription object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.TargetView">
      <summary>Gets the target view that the cache subscription applies to.</summary>
      <returns>The target view that the cache subscription applies to.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionAssociation.Update">
      <summary>Updates the cache SubscriptionAssociation definition.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionAssociationCollection">
      <summary>Represents an interface that defines the subscription association collection.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionAssociationCollection.Create(System.String,Microsoft.BusinessData.MetadataModel.IMethodInstance,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.TimeSpan,Microsoft.BusinessData.Offlining.ISubscription,Microsoft.BusinessData.MetadataModel.IView,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Creates the subscription association collection.</summary>
      <returns>The subscription association collection.</returns>
      <param name="name">The name of the collection.</param>
      <param name="methodInstance">The MethodInstance object.</param>
      <param name="lobSystemInstance">external system instance.</param>
      <param name="expireAfter">The expiration date.</param>
      <param name="destinationSubscription">The destination subscription object.</param>
      <param name="targetView">The SpecificFinder view on the destination external content type that will be populated by the association MethodInstance object.</param>
      <param name="properties">The key/value pair of properties.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionCollection">
      <summary>Represents an interface that defines the subscription collection.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionManager">
      <summary>Represents an interface that contains all public subscription management methods.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscription(Microsoft.BusinessData.MetadataModel.IView,System.String)">
      <summary>gets a single cache subscription given the view and the subscription name.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.Offlining.ISubscription" />.The subscription.</returns>
      <param name="view">The view of the subscription.</param>
      <param name="subscriptionName">The subscription programmatic name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscription(System.Int32)">
      <summary>Gets a single cache subscription given its ID.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.Offlining.ISubscription" />.The subscription.</returns>
      <param name="id">The given ID of the subscription.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscription(System.String,System.String,System.String,System.String)">
      <summary>Gets a single cache subscription given the fully qualified name of the view and the subscription name.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.Offlining.ISubscription" />.The subscription.</returns>
      <param name="entityNamespace">The namespace of the subscription Entity.</param>
      <param name="entityName">The name of the subscription Entity.</param>
      <param name="viewName">The namespace of the subscription View.</param>
      <param name="subscriptionName">The subscription programmatic name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscriptions">
      <summary>Gets all subscriptions in the cache.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.Offlining.ISubscriptionCollection" />.All subscriptions in the cache.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionManager.GetSubscriptions(System.String)">
      <summary>Gets all subscriptions in the cache associated with the given solution.</summary>
      <returns>Returns <see cref="T:Microsoft.BusinessData.Offlining.ISubscriptionCollection" />.All subscriptions in the cache associated with the given solution.</returns>
      <param name="solutionId">ID of the solution.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionQuery">
      <summary>Defines methods and properties that handle the subscription query.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Delete">
      <summary>Deletes the SubscriptionQuery object from the Queries collection on the cache subscription object.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Enabled">
      <summary>Gets and sets whether the subscription query is enabled.</summary>
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.ExpireAfter">
      <summary>Indicates how often to refresh the cache subscription query.</summary>
      <returns>The expiration time span.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Filters">
      <summary>Gets a collection of values that must be passed as input parameters to the query.</summary>
      <returns>A collection of query parameters.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.LastException">
      <summary>Gets the exception information of the last refresh attempt.</summary>
      <returns>The exception information of the last refresh attempt.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.LastRefreshed">
      <summary>Gets the DateTime at which the query was last executed. </summary>
      <returns>The DateTime at which the query was last executed.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.MethodInstance">
      <summary>Gets or sets the method instance definition for the query. </summary>
      <returns>The method instance definition for the query.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.RefreshStatus">
      <summary>Gets the refresh status of the query.</summary>
      <returns>The refresh status of the query.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Subscription">
      <summary>Gets the subscription object that contains this query.</summary>
      <returns>The subscription object that contains this query.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionQuery.Update">
      <summary>Updates the cache SubscriptionQuery definition information in the external data store.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionQueryCollection">
      <summary>Represents an interface that defines the collection of subscription queries.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISubscriptionQueryCollection.Create(System.String,Microsoft.BusinessData.MetadataModel.IMethodInstance,System.TimeSpan,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Creates the collection of subscription queries.</summary>
      <returns>The collection of subscription queries.</returns>
      <param name="name">The name of the subscription query.</param>
      <param name="methodInstance">The methodInstance object.</param>
      <param name="expireAfter">Specifies how often to refresh the subscription query.</param>
      <param name="properties">The key/value property collection.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISubscriptionRefreshStatus">
      <summary>Represents an interface that defines the subscription refresh status.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionRefreshStatus.HighPriority">
      <summary>Determines whether this is a high-priority subscription.</summary>
      <returns>true if high priority; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionRefreshStatus.LastRefreshed">
      <summary>Indicates when the subscription refresh ended.</summary>
      <returns>A value that indicates the ending time of the last refresh.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISubscriptionRefreshStatus.RefreshStatus">
      <summary>Gets the refresh status of the subscription.</summary>
      <returns>The refresh status of the subscription.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.ISynchronizationManager">
      <summary>Contains all public synchronization management methods.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetAllInstancesInError(Microsoft.BusinessData.MetadataModel.IView)">
      <summary>Gets all entity instances of a given view that are in error, including conflicts and read errors.</summary>
      <returns>The entity instances of a given view that are in error.</returns>
      <param name="view">The view of the instances.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetAllOperationsInError">
      <summary>Gets all failed operations from the queue, including association errors.</summary>
      <returns>The failed operations from the queue.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetOperation(System.Int32)">
      <summary>Gets an operation given its identifier (ID).</summary>
      <returns>The operation.</returns>
      <param name="operationId">The ID of the operation to be read.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetOperationExecutionSummary">
      <summary>Gets the current state of the queue in terms of the number of pending, failed, and completed operations.</summary>
      <returns>The progress summary.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.GetOperations">
      <summary>Gets all pending operations from the queue.</summary>
      <returns>The collection of the pending operations from the queue.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.PopulateCache(Microsoft.BusinessData.MetadataModel.IEntity,Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the LobSystem instances and populates the cache.</summary>
      <param name="destinationEntity">The destination entity of the association.</param>
      <param name="sourceEntityInstances">The source entity instances.</param>
      <param name="association">The association to execute.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="lobSystemInstance">The LobSystemInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.PopulateCache(Microsoft.BusinessData.MetadataModel.IEntity,Microsoft.BusinessData.Runtime.IFilterCollection,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance)">
      <summary>Gets the LobSystem instances and populates the cache.</summary>
      <param name="thisEntity">The entity to populate.</param>
      <param name="filterCollection">The filters to apply.</param>
      <param name="finderName">The name of the finder to execute.</param>
      <param name="lobSystemInstance">The LobSystemInstance object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.PopulateCache(Microsoft.BusinessData.MetadataModel.IView,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.Identity)">
      <summary>Gets the LobSystem instance and populates the cache.</summary>
      <param name="view">The view of the instance.</param>
      <param name="lobSystemInstance">The LobSystemInstance object.</param>
      <param name="identity">The identity of the instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.PopulateCache(System.String,System.String,System.String,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,Microsoft.BusinessData.Runtime.Identity)">
      <summary>Gets the LobSystem instance and populates the cache.</summary>
      <param name="entityNamespace">The entity namespace of the instance.</param>
      <param name="entityName">The entity name of the instance.</param>
      <param name="viewName">The view of the instance.</param>
      <param name="lobSystemInstance">The LobSystemInstance object.</param>
      <param name="identity">The identity of the instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.ResolveIdentity(Microsoft.BusinessData.Runtime.Identity)">
      <summary>Gets an identity that has both the TemporaryId and the identifier values array populated with the values that are currently available in the cache.</summary>
      <returns>The Identity object currently available in the cache.</returns>
      <param name="identity">The Identity object known to the cache.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.ISynchronizationManager.ResolveIdentity(System.Guid)">
      <summary>Gets an identity that has both the TemporaryId and the Identifier objects populated with the values that are currently available in the cache.</summary>
      <returns>The Identity object that is currently available in the cache.</returns>
      <param name="temporaryId">The TemporaryId object known to the cache.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.ISynchronizationManager.WorkOffline">
      <summary>Controls the cached-based operations of the user who is logged on. </summary>
      <returns>The current value of the property.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.OperationDependencyFailedException">
      <summary>Represents an exception that is thrown when a dependent operation fails.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.#ctor(System.String,System.Exception,Microsoft.BusinessData.Offlining.IOperation)">
      <summary>Constructs a new instance of the class by using a message, the inner exception, and the current operation object.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="operation">The current operation object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The serialization information about the requested data.</param>
      <param name="context">The streaming context of the requested data.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Offlining.OperationDependencyFailedException.OperationId">
      <summary>Gets an integer that represents the identifier (ID) of the operation.</summary>
      <returns>An integer that represents the ID of the operation.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.OperationStatus">
      <summary>Represents an enumeration that defines the operation status.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.Succeeded">
      <summary>Specifies the operation succeeded.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.InProgress">
      <summary>Specifies the operation is in progress.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.Failed">
      <summary>Specifies the operation failed.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.Pending">
      <summary>Specifies the operation is pending.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.Canceled">
      <summary>Specifies the operation is canceled.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.OperationStatus.LongRunning">
      <summary>Specifies the operation has started a business process on the external system and no results are available.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.RefreshStatus">
      <summary>Represents an enumeration that describes the refresh status.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.RefreshStatus.Succeeded">
      <summary>Specifies that the refresh succeeded.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.RefreshStatus.InProgress">
      <summary>Specifies that the refresh is in progress.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.RefreshStatus.Failed">
      <summary>Specifies that the refresh failed.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.RefreshStatus.Unknown">
      <summary>Specifies that the refresh status is unknown.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Offlining.SynchronizationStatus">
      <summary>Represents an enumeration that defines data synchronization between the cache and the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.Unchanged">
      <summary>Specifies the external item has no changes to synchronize to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.PendingUpdate">
      <summary>Specifies the external item is updated locally but the changes are not synchronized to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.PendingCreate">
      <summary>Specifies the external item was created locally but the changes are not synchronized to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.PendingDelete">
      <summary>The external item has been deleted locally but the changes have not been synchronized to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.InError">
      <summary>Specifies there was a error encountered while synchronizing changes of the external item to the data source.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.InConflict">
      <summary>Specifies the data in the cache and in the data source are not the same.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Offlining.SynchronizationStatus.RefreshNeeded">
      <summary>The external item needs to be refreshed from the data source.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.AdministrableProperty">
      <summary>Represents a single property that is reported by the shim.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AdministrableProperty.#ctor(System.String,System.String,System.Type,System.String,System.Type,System.Boolean)">
      <summary>Constructs a new instance of the class.</summary>
      <param name="displayName">The display name of the property.</param>
      <param name="description">The description of the property.</param>
      <param name="displayType">The type in which the property should be displayed.</param>
      <param name="propertyName">The name of the property in the metadata.</param>
      <param name="propertyType">The type of the property in the metadata.</param>
      <param name="isRequired">Specifies if this property is required for the shim to function.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.Description">
      <summary>Description of the property that should be displayed in the user interface (UI).</summary>
      <returns>The description of the property.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.DisplayName">
      <summary>The name of the property that should be displayed in the user interface (UI).</summary>
      <returns>The UI name of the property.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.DisplayType">
      <summary>Type in which the property should be displayed in UI.</summary>
      <returns>The type of the property.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.IsRequired">
      <summary>Specifies if this property is required in the metadata.</summary>
      <returns>true if required; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.PropertyName">
      <summary>The name of the property in metadata.</summary>
      <returns>The name of the property in metadata.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AdministrableProperty.PropertyType">
      <summary>The type of the property in metadata.</summary>
      <returns>The type of the property in metadata.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.AssociationEntityInstanceReferencesDictionary">
      <summary>Represents a dictionary with associations as a key, and entity instance reference collection as a value.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AssociationEntityInstanceReferencesDictionary.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AssociationEntityInstanceReferencesDictionary.#ctor(System.Int32)">
      <summary>Constructs a new instance of the class with initial capacity.</summary>
      <param name="capacity">The size of the initial dictionary.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary">
      <summary>Represents a dictionary with associations as key and entity instance collection as value.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AssociationEntityInstancesDictionary.#ctor(System.Int32)">
      <summary>Initializes a new instance of the class with an initial capacity.</summary>
      <param name="capacity">Size of the initial dictionary.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.AuthenticationException">
      <summary>Specifies the error that is thrown when the business data catalog encounters an authentication problem with the back end, such as rejected or expired credentials.
</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The specified error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.#ctor(System.String,System.Exception,System.Uri)">
      <summary>Initializes a new instance of the class with a specified error message, a reference to the inner exception that caused this exception, and the URL that contains the credentials.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
      <param name="credentialEntryUrl">The URL that contains the credentials.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.AuthenticationException.CredentialEntryUrl">
      <summary>Gets the credential entry URI.</summary>
      <returns>The credential entry URI.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.AuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Deserializes the exception object.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.BackendNullReturnException">
      <summary>Represents an exception that is thrown when the back-end method returns null.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BackendNullReturnException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BackendNullReturnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BackendNullReturnException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BackendNullReturnException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs">
      <summary>Represents a class that provides event arguments for the <see cref="T:Microsoft.BusinessData.Runtime.BatchCompletionEventHandler" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs.AdvanceToNextBatch">
      <summary>Gets or sets whether the enumerator invokes the function to get another batch of EntityInstances.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.true if the enumerator invokes the function, otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.BatchCompletionEventArgs.HasMoreBatches">
      <summary>Determines whether the enumeration has more batches.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.true if the enumeration has more batches; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.BatchCompletionEventHandler">
      <summary>Represents a method that handles the batch completion event.</summary>
      <param name="sender">The enumerator that raised this event.</param>
      <param name="args">Arguments of the event.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.CacheUsage">
      <summary>Represents an enumeration that specifies the cache usage mode.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Runtime.CacheUsage.Default">
      <summary>Specifies the entity default cache usage. (=0)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Runtime.CacheUsage.Online">
      <summary>Specifies no cache usage. All calls are made online. (=1)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Runtime.CacheUsage.Cached">
      <summary>Specifies cache to be the main source, online call may be made to get fresher data or if the data is not available in the cache. Modifying operations are queued. (=2)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.Runtime.CacheUsage.Offline">
      <summary>Specifies the cache as the only source. No calls are made online. (=3)</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.CannotConnectException">
      <summary>Thrown when the Business Data Connectivity (BDC) service cannot successfully make a connection to the back-end business application.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.CannotConnectException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>The exception object to a string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ConflictDetectedException">
      <summary>Thrown when a conflict is detected between two different updates.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConflictDetectedException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConflictDetectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConflictDetectedException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConflictDetectedException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ConnectionPoolFullException">
      <summary>Thrown when a connection cannot be obtained because the connection pool is full.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Int32)">
      <summary>Constructs a new instance of the class by setting the value of the Lob system instance and the pool size  mentioned in the parameter passed to the constructor.</summary>
      <param name="instance">The Lob system instance.</param>
      <param name="poolsize">The pool size.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(System.Int32)">
      <summary>Constructs a new instance of the class by using the pool size mentioned in the parameter passed to the constructor.</summary>
      <param name="poolsize">The pool size.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(System.String)">
      <summary>Constructs a new instance of the class by using the message string parameter.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ConnectionPoolFullException.ToString">
      <summary>Converts the exception object to a string.</summary>
      <returns>The string that represents exception object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.DynamicType">
      <summary>Represents an object whose type can be modified at runtime.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.#ctor(System.Int32)">
      <summary>Constructs a new instance of the class by using the number of children.</summary>
      <param name="numberOfChildren">The initial number of slots for fields of this type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.#ctor(System.String)">
      <summary>Constructs a new instance of the class by using the name of this object's type.</summary>
      <param name="name">The name of this object's type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.#ctor(System.String,System.Int32)">
      <summary>Constructs a new instance of the class by using the name of this object's type and the number of children.</summary>
      <param name="name">The name of this object's type.</param>
      <param name="numberOfChildren">The initial number of slots for fields of this type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds an object to the collection.</summary>
      <param name="item">The object to be added to the collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Add(System.String,System.Object)">
      <summary>Adds a key/value pair to the collection.</summary>
      <param name="key">The key object.</param>
      <param name="value">The value object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Clear">
      <summary>Removes all the items. </summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Checks to see if the collection contains a specific item.</summary>
      <returns>true if the item is found; otherwise, false.</returns>
      <param name="item">The item object to search for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.ContainsKey(System.String)">
      <summary>Checks to see if the collection contains a specific key.</summary>
      <returns>true if the key is found; otherwise, false.</returns>
      <param name="key">The key to search for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copy the collection items to an object array starting at a specific index.</summary>
      <param name="array">The array to receive the items.</param>
      <param name="arrayIndex">The starting index.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Count">
      <summary>Returns the number of fields in the dynamic type.</summary>
      <returns>The number of fields.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.GetEnumerator">
      <summary>Returns an enumerator to the collection.</summary>
      <returns>The returned enumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.GetSchema">
      <summary>Returns the XML schema.</summary>
      <returns>The XML schema.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.IsReadOnly">
      <summary>Checks to see if the dynamic type is read-only.</summary>
      <returns>true if read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Item(System.String)">
      <summary>Returns an item at a specific key.</summary>
      <returns>The item searched for.</returns>
      <param name="key">The key of the item.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Keys">
      <summary>Returns the collection of keys in the collection.</summary>
      <returns>The key collection.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Name">
      <summary>Returns the name of the dynamic type.</summary>
      <returns>The name of the dynamic type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.ReadXml(System.Xml.XmlReader)">
      <summary>Reads an XML document.</summary>
      <param name="reader">The XML reader.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes an key/value entry from the collection. </summary>
      <returns>true if succeeded; otherwise, false.</returns>
      <param name="item">The entry to be removed.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.Remove(System.String)">
      <summary>Removes an item with a specified key string from the collection.</summary>
      <returns>true if succeeded; otherwise, false.</returns>
      <param name="key">The key of the item to be removed.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection items to an array starting at a specific index.</summary>
      <param name="array">The destination array.</param>
      <param name="index">The starting index.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#ICollection#IsSynchronized">
      <summary>Checks to see if the dynamic type is synchronized.</summary>
      <returns>true if synchronized; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#ICollection#SyncRoot">
      <summary>Synchronizes the root of the collection.</summary>
      <returns>The root of the collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Adds a key/value pair to the collection.</summary>
      <param name="key">The key object.</param>
      <param name="value">The value object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Checks to see if the collection contains a specific key object.</summary>
      <returns>true if found; otherwise, false.</returns>
      <param name="key">The key to search for.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#GetEnumerator">
      <summary>Returns an enumerator to the dictionary.</summary>
      <returns>The returned enumerator.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#IsFixedSize">
      <summary>Checks to see if the items in the collection are of fixed size. </summary>
      <returns>true if fixed size; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#IsReadOnly">
      <summary>Checks to see if the items in the collection are read-only.</summary>
      <returns>true if read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Item(System.Object)">
      <summary>Searches the collection for a specific item using its key.</summary>
      <returns>The collection item.</returns>
      <param name="key">The key of the item to search for.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Keys">
      <summary>Returns the collection of keys in the collection.</summary>
      <returns>The key collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Removes a specified object from the collection.</summary>
      <param name="key">The key object of the item to be removed.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IDictionary#Values">
      <summary>Returns the collection of values in the collection.</summary>
      <returns>The value collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator to the collection.</summary>
      <returns>The returned enumerator.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.TryGetValue(System.String,System.Object@)">
      <summary>Searches for a value in the collection.</summary>
      <returns>true if found; otherwise, false.</returns>
      <param name="key">The key of the item.</param>
      <param name="value">The value of the item.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.DynamicType.Values">
      <summary>Returns the collection of values in the dynamic type.</summary>
      <returns>The value collection in the dynamic type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.DynamicType.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes an XML document.</summary>
      <param name="writer">The XML writer.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.EntityInstanceCollection">
      <summary>Represents the collection of external content type instances.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceCollection.#ctor">
      <summary>Constructs a new instance of the collection class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceCollection.#ctor(System.Int32)">
      <summary>Constructs a new instance of the collection class with initial capacity.</summary>
      <param name="capacity">The initial capacity.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.EntityInstanceReference">
      <summary>Represents a reference to an external content type instance that can be materialized without any extra information.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.#ctor(Microsoft.BusinessData.Runtime.IEntityInstance)">
      <summary>Creates a reference to the given external content type instance.</summary>
      <param name="instance">The given external content type instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Deserialize(System.String,Microsoft.BusinessData.MetadataModel.IMetadataCatalog)">
      <summary>Reinstates the given reference string, using given metadata store as the source of external content type.</summary>
      <returns>Reinstated external content type  instance reference.</returns>
      <param name="serializedReference">Reference to reinstate.</param>
      <param name="catalog">The metadata store to use for getting the external content type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Equals(System.Object)">
      <summary>Checks if two objects are equal.</summary>
      <returns>true if equal; otherwise, false.</returns>
      <param name="obj">The other object to compare to.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.GetHashCode">
      <summary>Returns the hash code for this object.</summary>
      <returns>The hash code for this object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.EntityInstanceReference.Identity">
      <summary>Retrieves the identity of the external content type.</summary>
      <returns>The identity of the external content type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Materialize">
      <summary>Materializes the reference into <see cref="T:Microsoft.BusinessData.Runtime.IEntityInstance" />. </summary>
      <returns>The materialized IEntityInstance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Materialize(Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Materializes the reference into IEntityInstance using the given operation mode. The data is read lazily.</summary>
      <returns>The materialized IEntityInstance.</returns>
      <param name="mode">The operation mode to use for materialization.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Materialize(Microsoft.BusinessData.Runtime.OperationMode,System.Boolean)">
      <summary>Materializes the reference into <see cref="T:Microsoft.BusinessData.Runtime.IEntityInstance" />, using the given operation mode.</summary>
      <returns>The materialized <see cref="T:Microsoft.BusinessData.Runtime.IEntityInstance" />.</returns>
      <param name="mode">The operation mode to use for materialization.</param>
      <param name="readNow">Read-now Boolean parameter.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Materialize(System.Boolean)">
      <summary>Materializes the reference into <see cref="T:Microsoft.BusinessData.Runtime.IEntityInstance" />.</summary>
      <returns>The materialized <see cref="T:Microsoft.BusinessData.Runtime.IEntityInstance" />.</returns>
      <param name="readNow">Read-now Boolean parameter.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.ReferenceToView(System.String)">
      <summary>Creates a reference to another view of the same external content type instance.</summary>
      <returns>The created reference.</returns>
      <param name="targetSpecificFinderName"></param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReference.Serialize">
      <summary>Reinstates the external content type  instance reference.</summary>
      <returns>The reference string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.EntityInstanceReferenceCollection">
      <summary>Represents the collection of external content type instances.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReferenceCollection.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.EntityInstanceReferenceCollection.#ctor(System.Int32)">
      <summary>Constructs a new instance of the class with a specified initial capacity.</summary>
      <param name="capacity">The initial capacity.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ExceededLimitException"></member>
    <member name="M:Microsoft.BusinessData.Runtime.ExceededLimitException.#ctor"></member>
    <member name="M:Microsoft.BusinessData.Runtime.ExceededLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.BusinessData.Runtime.ExceededLimitException.#ctor(System.String)"></member>
    <member name="M:Microsoft.BusinessData.Runtime.ExceededLimitException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.BusinessData.Runtime.ExecutingTooLongException">
      <summary>Thrown when the execution takes too long time.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExecutingTooLongException.#ctor">
      <summary>Initializes a new instance of the exception class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExecutingTooLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data and a streaming context.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExecutingTooLongException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ExecutingTooLongException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception. </param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ExecutionEventHandler">
      <summary>Represents the execution event handler.</summary>
      <param name="context">The context of the execution.</param>
      <param name="executingMethod">The method to execute.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IAdministrableSystem">
      <summary>Implement this interface to allow shims to report properties that they understand on external system and external system instance. These properties then can be displayed in a UI for the administrator to set values for them.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IAdministrableSystem.AdministrableLobSystemInstanceProperties"></member>
    <member name="P:Microsoft.BusinessData.Runtime.IAdministrableSystem.AdministrableLobSystemProperties"></member>
    <member name="T:Microsoft.BusinessData.Runtime.IAssociatedIdSet">
      <summary>Wraps source identities and a destination identity of a relationship instance that belongs to an association.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IAssociatedIdSet.GetDestinationIdentity">
      <summary>Gets the destination identity.</summary>
      <returns>The destination identity.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IAssociatedIdSet.GetSourceIdentity(Microsoft.BusinessData.MetadataModel.IEntity)">
      <summary>Gets the source identity.</summary>
      <returns>The source identity.</returns>
      <param name="source">The source external content type.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IAssociatedIdSetEnumerator">
      <summary>Defines a collection of associations in which each item has source and destination identities.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IAssociatedIdSetEnumerator.Association">
      <summary>Gets the association between two external content types.</summary>
      <returns>The association between two external content types.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IBatchableEntityInstanceEnumerator">
      <summary>Defines properties and events that control batching.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IBatchableEntityInstanceEnumerator.Filters">
      <summary>Retrieves the collection of filters.</summary>
      <returns>The collection of filters.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IBatchableEntityInstanceEnumerator.IsBatchingEnabled">
      <summary>Checks to see if batching is enabled.</summary>
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="E:Microsoft.BusinessData.Runtime.IBatchableEntityInstanceEnumerator.OnBatchCompletion">
      <summary>Represents the event of batch completion.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IBatchingTerminationFilter">
      <summary>Defines a property to control batch termination.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IBatchingTerminationFilter.IsTerminated">
      <summary>Checks to see if the batch process is terminated.</summary>
      <returns>true if terminated; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ICloseable">
      <summary>Defines a method to close down the server stream for IEntityInstanceEnumerator.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ICloseable.Close">
      <summary>Closes the server stream.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.Identity">
      <summary>Defines the identifier values of an external content type instance.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.#ctor(System.Guid)">
      <summary>Constructs a new instance of the class by using a temporary identifier.</summary>
      <param name="tempid">The temporary identifier.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.#ctor(System.Guid,System.Object[])">
      <summary>Constructs a new instance of the class by using a temporary identifier and an array of identifier values.</summary>
      <param name="tempid">The temporary identifier.</param>
      <param name="identifierValues">The values of identifiers.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.#ctor(System.Object)">
      <summary>Constructs a new instance of the class by using an identifier value.</summary>
      <param name="identifierValue">The identifier value.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.#ctor(System.Object[])">
      <summary>Constructs a new instance of the class by using an array of identifier values.</summary>
      <param name="identifierValues">An array of identifier values.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.Deserialize(System.String)">
      <summary>Rehydrates the identity from the string form.</summary>
      <returns>The rehydrated identity.</returns>
      <param name="serializedIdentity">A string that contains serialized identity.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.Equals(System.Object)">
      <summary>Checks to see if two objects are equal.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="obj">The other object to compare to.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.GetHashCode">
      <summary>Returns the hash code for this object.</summary>
      <returns>The hash code.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.GetIdentifierValues">
      <summary>Provides access to identifier values.</summary>
      <returns>Identifier values.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.Identity.IdentifierCount">
      <summary>Returns the number of identifiers.</summary>
      <returns>The number of identifiers.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.Identity.IsTemporary">
      <summary>Checks to see if the identifier is temporary.</summary>
      <returns>true if temporary; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.Identity.Item(System.Int32)">
      <summary>Retrieves the element at the given index.</summary>
      <returns>The element at the given index.</returns>
      <param name="identifierIndex">The index of the requested item.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.Identity.Serialize">
      <summary>Dehydrates the identity into a string.</summary>
      <returns>The dehydrated identity string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.Identity.TemporaryId">
      <summary>Returns the temporary part of the identity.</summary>
      <returns>The temporary part of the identity.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IEntityInstance">
      <summary>Defines methods and properties to handle an instance of an external content type.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Associate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Associates this external content type instance with the given external content type instances using the given association.</summary>
      <param name="instances">The other external content type instance.</param>
      <param name="association">The association.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Associate(Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Associates this external content type instance with the given external content type instance using the given association.</summary>
      <param name="instance">The other external content type instance.</param>
      <param name="association">The association.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Delete">
      <summary>Invokes the delete method for this external content type instance.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Disassociate(Microsoft.BusinessData.Runtime.EntityInstanceCollection,Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Disassociates this external content type instance from the given external content type instances using the given association.</summary>
      <param name="instances">The given collection of external content type instances.</param>
      <param name="association">The given association.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Disassociate(Microsoft.BusinessData.Runtime.IEntityInstance,Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Disassociates this external content type instance from the given external content type instance using the given association.</summary>
      <param name="instance">The given external content type instance.</param>
      <param name="association">The given association.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.Entity">
      <summary>Gets the external content type  of this external content type instance.</summary>
      <returns>The external content type of this external content type instance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.EntityAsDataRow(System.Data.DataTable)">
      <summary>Gets an external content type instance as a DataRow object from the specified DataTable object.</summary>
      <returns>A DataRow object containing all the fields in the external content type instance.</returns>
      <param name="tableToAddRowTo">The DataTable object to add the external content type instance as a row to.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.EntityAsDataTable">
      <summary>Gets the external content type instance as a DataTable object with a single row of data containing the fields in the external content type  instance.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object with one data row.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.EntityAsFormattedDataRow(System.Data.DataTable)">
      <summary>Exposes the external content type instance as a DataRow object in the specified DataTable object with formatting of the complex fields in the external content type instance.</summary>
      <returns>A DataRow object containing all the fields in the external content type instance.</returns>
      <param name="tableToAddRowTo">The DataTable object to add the external content type instance as a row to.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.EntityAsFormattedDataTable">
      <summary>Exposes the external content type  instance as a DataTable object with formatting of the complex fields in the external content type  instance.</summary>
      <returns>A DataTable object.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstanceIdentity(Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.MetadataModel.IEntity)">
      <summary>Gets the identity of the external content type instance that is associated with this external content type instance.</summary>
      <returns>The identity of the external content type instance.</returns>
      <param name="association">The association.</param>
      <param name="entity">The type of the other external content type instance.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstances(Microsoft.BusinessData.MetadataModel.IAssociation)">
      <summary>Gets the associated external content type instance with the given association.</summary>
      <returns>The associated external content type instance.</returns>
      <param name="association">The given association.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstances(Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection)">
      <summary>Gets the associated external content type instance with the given association, using given filters.</summary>
      <returns>The associated external content type instance.</returns>
      <param name="association">The given association.</param>
      <param name="filters">The given filters.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstances(Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.IFilterCollection,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the associated external content type instance with the given association, using given operation mode and filters.</summary>
      <returns>The associated external content type instance.</returns>
      <param name="association">The given association.</param>
      <param name="filters">The given filters.</param>
      <param name="mode">The given operation mode.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetAssociatedInstances(Microsoft.BusinessData.MetadataModel.IAssociation,Microsoft.BusinessData.Runtime.OperationMode)">
      <summary>Gets the associated external content type instance with the given association, using given operation mode.</summary>
      <returns>The associated external content type instance.</returns>
      <param name="association">The given association.</param>
      <param name="mode">The given operation mode.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetFormatted(Microsoft.BusinessData.MetadataModel.IField)">
      <summary>Gets the value of the specified field after applying complex formatting.</summary>
      <returns>An object that represents the flattened complex structure.</returns>
      <param name="field">A Field object in the external content type instance that represents a complex structure.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetFormatted(System.String)">
      <summary>Gets the value of the field with the specified name after applying complex formatting. </summary>
      <returns>An object that represents the flattened complex structure.</returns>
      <param name="fieldName">The name of a Field object in the external content type instance that represents a complex structure.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetIdentity">
      <summary>Gets the identity of this external content type instance.</summary>
      <returns>The identity of this external content type instance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.GetSecurityDescriptor">
      <summary>Gets the security descriptor for this external content type instance.</summary>
      <returns>The security descriptor.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.InstanceOperationMode">
      <summary>Gets the operation mode that this external content type instance is working in.</summary>
      <returns>The operation mode.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.LobSystemInstance">
      <summary>Gets the Lob system instance that this external content type instance is coming from.</summary>
      <returns>The Lob system instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstance.RelatedSpecificFinderName">
      <summary>Gets the specific finder that has a view that is the closest superset of this external content type instance's view.</summary>
      <returns>The specific finder.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.SwitchView(System.String)">
      <summary>Gets an external content type instance of the specified view (invokes the named specific finder with the identity of the current instance).</summary>
      <returns>An external content type instance of the specified view.</returns>
      <param name="specificFinderName">The name of the view or the specific finder to execute.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.SwitchView(System.String,System.Boolean)">
      <summary>Gets an external content type instance of the specified view (invokes the named specific finder with the identity of the current instance).</summary>
      <returns>An external content type instance of the specified view.</returns>
      <param name="specificFinderName">The name of the view or specific finder to execute.</param>
      <param name="readNow">If true the new instance will be read immediately; otherwise, it will be read when data is required.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IEntityInstance.Update">
      <summary>Invokes closest update method of this external content type instance.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator">
      <summary>Represents an enumerator interface that allows reading elements from collections or streams. </summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IEntityInstanceEnumerator.SharedEntityState">
      <summary>Retrieves the SharedEntityState object for the external items in the enumerator. </summary>
      <returns>The SharedEntityState object</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IExecutionContext">
      <summary>Represents an execution context that is used to pass a property bag of information from the client application to the connector, bypassing the dispatcher.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IExecutionContext.ExecutedMethods">
      <summary>Retrieves a collection of methods executed in this context.</summary>
      <returns>The collection of methods executed in this context.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.IsManagedProperty(System.String)">
      <summary>Determines whether a property is managed.</summary>
      <returns>true if the property is managed; otherwise, false.</returns>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.IsPropertyDefined(System.String)">
      <summary>Determines whether the given property exists in the property bag.</summary>
      <returns>true if the property exists in the property bag; otherwise, false.</returns>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IExecutionContext.Item(System.String)">
      <summary>Gets or sets properties in this property bag, which will be accessible to the connector. This allows for the passing information that is not part of a method, like ExecutionPriority.</summary>
      <returns>An item in the property bag.</returns>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.ManageProperty(System.String)">
      <summary>Marks a property as managed, in which case, it will be disposed when the context is disposed.</summary>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="E:Microsoft.BusinessData.Runtime.IExecutionContext.MethodExecuted">
      <summary>Represents an event that is triggered just after a method is executed.</summary>
    </member>
    <member name="E:Microsoft.BusinessData.Runtime.IExecutionContext.MethodExecuting">
      <summary>Represents an event that is triggered just before a method is executed.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.UndefineProperty(System.String)">
      <summary>Removes the property from the property bag.</summary>
      <returns>true if the property is removed from the bag; otherwise, false.</returns>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IExecutionContext.UnManageProperty(System.String)">
      <summary>Marks a property as unmanaged.</summary>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IExecutionInfo">
      <summary>Represents the root interface for ExecutionInfo classes; contains contextual information.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IExecutionInfo.Exception">
      <summary>Represents an exception thrown during execution.</summary>
      <returns>The thrown exception.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IExecutionInfo.LobSystemInstance">
      <summary>Represents the external system instance on which methods are to be executed.</summary>
      <returns>The external system instance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IFieldAccessor">
      <summary>Provides functionality that allows the Business Data Connectivity (BDC) service runtime to get and set the object's field value.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldAccessor.GetFieldValue(System.String)">
      <summary>Retrieves the value of the field.</summary>
      <returns>The value of the field.</returns>
      <param name="fieldName">The name of the field.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldAccessor.SetFieldValue(System.String,System.Object)">
      <summary>Sets the value of the field.</summary>
      <param name="fieldName">The name of the field.</param>
      <param name="fieldValue">The value of the field.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IFieldValueDictionary">
      <summary>Represents a collection of field/value pairs in a view.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.CalculateHashCode">
      <summary>Calculates the hash code from the values.</summary>
      <returns>The hash code.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.CreateCollectionInstance(System.String,System.Int32)">
      <summary>Creates a new instance of the collection the dot notation points to.</summary>
      <returns>The instantiated collection.</returns>
      <param name="fieldDotNotation">The path to the collection.</param>
      <param name="size">The size of the collection.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.CreateInstance(System.String)">
      <summary>Creates a new instance of the object the dot notation points to.</summary>
      <returns>The instantiated object.</returns>
      <param name="fieldDotNotation">The path to the object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.FromXml(System.String)">
      <summary>Sets the values in this dictionary from given XML.</summary>
      <param name="xml">A string containing XML data.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.GetCollectionSize(System.String)">
      <summary>Returns the size of the collection that dot notation points to.</summary>
      <returns>The size of the collection.</returns>
      <param name="fieldDotNotation">The path to the collection.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFieldValueDictionary.Item(Microsoft.BusinessData.MetadataModel.IField)">
      <summary>Gets or sets the value for the specified field.</summary>
      <returns>The field value.</returns>
      <param name="field">The field to get or set.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFieldValueDictionary.Item(System.String)">
      <summary>Gets or sets the value of the field specified by the dot notation.</summary>
      <returns>The value of the field specified by the dot notation.</returns>
      <param name="fieldDotNotation">The field specified by the dot notation.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IFieldValueDictionary.ToXml">
      <summary>Retrieves the values in XML form.</summary>
      <returns>The XML values.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFieldValueDictionary.ViewDefinition">
      <summary>Gets the view of this field value dictionary.</summary>
      <returns>The view of the field value dictionary.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IFilter">
      <summary>Represents the runtime filter.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFilter.FilterDescriptor">
      <summary>Gets the filter descriptor associated with this filter.</summary>
      <returns>The filter descriptor.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IFilter.LocalizedDisplayName">
      <summary>Gets the localized display name of this filter.</summary>
      <returns>The localized display name of this filter.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IFilterCollection">
      <summary>Represents a read-only collection of filters.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IInputOutputFilter">
      <summary>Represents a filter that has both an input value and an output value.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IInstance">
      <summary>Represents an instance of a data class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IInstance.AdapterObject">
      <summary>Gets the data of this instance.</summary>
      <returns>The data of this instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IInstance.DataClass">
      <summary>Gets the data class that this instance is coming from.</summary>
      <returns>The data class this instance is coming from.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.Execute(Microsoft.BusinessData.MetadataModel.IMethodInstance)">
      <summary>Invokes a method instance.</summary>
      <returns>The result of the execution.</returns>
      <param name="methodToExecute">The name of the method instance to execute.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.Execute(Microsoft.BusinessData.MetadataModel.IMethodInstance,System.Object[]@)">
      <summary>Invokes a method instance.</summary>
      <returns>The execution object.</returns>
      <param name="methodToExecute">The method instance to execute.</param>
      <param name="overrideArgs">The array of override arguments.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.GetActionUrl(Microsoft.BusinessData.MetadataModel.IAction)"></member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.GetStreamableField(System.String)">
      <summary>Gets the streamable field of this instance with the given name.</summary>
      <returns>The streamable field.</returns>
      <param name="fieldName">The name of the field that contains streamable data.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IInstance.GetStreamableFields">
      <summary>Gets the descriptors for streamable fields of this instance.</summary>
      <returns>The streamable field descriptors.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IInstance.TypeDescriptor">
      <summary>Gets the root type descriptor of the adapter object that this instance has.</summary>
      <returns>The root type descriptor.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IMethodExecutionInfo">
      <summary>Defines properties to handle method execution.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IMethodExecutionInfo.Filters">
      <summary>Gets the collection of filters.</summary>
      <returns>The collection of filters.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IMethodExecutionInfo.MethodInstance">
      <summary>Gets the method instance.</summary>
      <returns>The method instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IMethodExecutionInfo.Parameters">
      <summary>Gets the parameter array.</summary>
      <returns>The parameter array.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IMethodExecutionInfo.SystemUtilityType">
      <summary>Gets the system utility type.</summary>
      <returns>The system utility type.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IOutputFilter">
      <summary>Represents a filter that holds additional values post method execution.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IOutputFilter.OutputTypeDescriptor">
      <summary>Gets the output type descriptor.</summary>
      <returns>The output type descriptor.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IOutputFilter.Value">
      <summary>Gets the value of the output filter.</summary>
      <returns>The value of the output filter.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IRuntimeHelper">
      <summary>Defines various helpers for the Open Information Model (OIM) runtime.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.ExtractIdentity(Microsoft.BusinessData.Runtime.IFieldValueDictionary)">
      <summary>Extracts Identity from an IFieldValueDictionary object.</summary>
      <returns>The extracted identity.</returns>
      <param name="fields">The FieldValueDictionary object that stores values of a view, which has identity.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.FilterMetadataObjectsByProperty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
      <summary>Gets the metadata objects of the given type which define a property with the given name and value.</summary>
      <returns>An array of metadata objects that define the given property.</returns>
      <param name="collection">Enumerable collection of objects.</param>
      <param name="propertyName">Name of the property to look for.</param>
      <typeparam name="T">Type of the metadata object collection.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.FilterMetadataObjectsByProperty``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Object)">
      <summary>Gets the metadata objects of the given type which define a property with the given name and value.</summary>
      <returns>An array of metadata objects that define the given property with given value.</returns>
      <param name="collection">Numerable collection of objects.</param>
      <param name="propertyName">Name of the property to look for.</param>
      <param name="propertyValue">Value for the property to look for.</param>
      <typeparam name="T">Type of the metadata object collection.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.GetFirstItem``1(System.Collections.IEnumerable)">
      <summary>Gets the first metadata object in the enumeration.</summary>
      <returns>The first item in the enumeration.</returns>
      <param name="collection">Enumerable collection of objects.</param>
      <typeparam name="T">Type of the metadata object collection.</typeparam>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.GetOutputFilterByName(Microsoft.BusinessData.Runtime.IFilterCollection,System.String)"></member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.GetUserInputFilterByName(Microsoft.BusinessData.Runtime.IFilterCollection,System.String)">
      <summary>Picks the user input filter which has the given filter descriptor name from the filter collection.</summary>
      <returns>The available user input filter.</returns>
      <param name="filters">The collection of filters.</param>
      <param name="name">The name of the filter descriptor.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.VerifyEntityInstanceReference(Microsoft.BusinessData.Runtime.EntityInstanceReference,System.String)">
      <summary>Checks to see if the EntityInstanceReference references the specified external system instance.</summary>
      <returns>true if the reference is from the specified external system instance; otherwise, false.</returns>
      <param name="reference">The reference to validate.</param>
      <param name="lobsystemInstanceName">external system instance name.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.VerifyEntityInstanceReference(Microsoft.BusinessData.Runtime.EntityInstanceReference,System.String,System.String)">
      <summary>Checks to see if the EntityInstanceReference references the specified external content type in the specified namespace.</summary>
      <returns>true if the reference is from an external content type with the specified namespace and name; otherwise, false.</returns>
      <param name="reference">The reference to validate.</param>
      <param name="entityNamespace">Namespace of the external content type.</param>
      <param name="entityName">Name of the external content type.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IRuntimeHelper.VerifyEntityInstanceReference(Microsoft.BusinessData.Runtime.EntityInstanceReference,System.String,System.String,System.String)">
      <summary>Checks to see if the EntityInstanceReference references the specifed external content type in the specified namespace and specific finder name.</summary>
      <returns>true if the reference is from an external content type with the specified namespace and name, and from the specific finder; otherwise, false.</returns>
      <param name="reference">The reference to validate.</param>
      <param name="entityNamespace">Namespace of the external content type.</param>
      <param name="entityName">Name of the external content type.</param>
      <param name="specificFinderName">Name of the specific finder.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISharedEntityState">
      <summary>Represents the shared external content type state information for an external content type's instances.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.ChildTypeDescriptors">
      <summary>Gets the type descriptors contained in the instances.</summary>
      <returns>The collection of the child type descriptors.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.DataTableForm">
      <summary>Gets the shared entity state information as a DataTable object.</summary>
      <returns>A DataTable object containing the shared external content type state information.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.LobSystem">
      <summary>Gets the external system object of the external content type instances.</summary>
      <returns>An external system object representing the external system of the external content type instances.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.LobSystemInstance">
      <summary>Gets the external system instance of the external content type instances.</summary>
      <returns>An external system object representing the external system instance of the external content type instances.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.MemberRendererDictionary">
      <summary>Gets a list of members that are contained in the external content type.</summary>
      <returns>A dictionary of members in the external content type.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.MemberTypeDescriptorDictionary">
      <summary>Gets a list of type descriptors of the members contained in the external content type.</summary>
      <returns>A dictionary of type descriptors of the members in the external content type.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.RootTypeDescriptor">
      <summary>Gets the root type descriptor of the external content type instance.</summary>
      <returns>A TypeDescriptor object representing the type of the instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.RootTypeDescriptorParameter">
      <summary>Gets the parameter of the root type descriptor of the external content type instance.</summary>
      <returns>A Parameter object representing the parameter of the instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.TargetEntity">
      <summary>Gets the target external content type for the external content type instance.</summary>
      <returns>An external content type object that represents the target entity for the external content type instance.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISharedEntityState.TargetEntityIdentifierTypeDescriptors">
      <summary>Gets the type descriptors for the identifiers in the target external content type for the external content type instance.</summary>
      <returns>A list of identifier type descriptors.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IStreamableField">
      <summary>Represents a field of an instance that has stream data.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IStreamableField.GetData">
      <summary>Returns the data stream of the field.</summary>
      <returns>The data stream.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableField.ParentInstance">
      <summary>Gets the instance that this field belongs to.</summary>
      <returns>The instance this field belongs to.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableField.StreamAccessorName">
      <summary>Gets the name of the MethodInstance that implements the access to the corresponding streamable field.</summary>
      <returns>The name of the MethodInstance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptor">
      <summary>Defines properties that handle the descriptor of a streamable field.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptor.HasMimeType">
      <summary>Informs whether or not a MimeType is defined.</summary>
      <returns>true if defined; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptor.MimeType">
      <summary>Gets a description of the contents of the stream.</summary>
      <returns>Description of the contents of the stream.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptor.StreamAccessorName">
      <summary>Gets the name of the MethodInstance that opens and returns.</summary>
      <returns>Name of the MethodInstance.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IStreamableFieldDescriptorCollection">
      <summary>Represents the descriptors collection of the streamable fields.</summary>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISystemPropertyValidator">
      <summary>Defines methods that handle the system property validator.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemPropertyValidator.ValidateLobSystemInstanceProperty(System.String,System.Object@,System.String,System.Type)">
      <summary>Validates an external system instance property.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">A reference to the property value.</param>
      <param name="metadataObjectName">The name of the metadata object.</param>
      <param name="metadataObjectType">The type of the metadata object.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemPropertyValidator.ValidateLobSystemProperty(System.String,System.Object@,System.String,System.Type)">
      <summary>Validates an external system property.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">A reference to the property value.</param>
      <param name="metadataObjectName">The name of the metadata object.</param>
      <param name="metadataObjectType">The type of the metadata object.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISystemProxyAssemblyManager">
      <summary>Represents an interface that allows the user to extract the proxy assembly and its dependent assembly bytes from the external system store.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemProxyAssemblyManager.RetreiveAssemblyBytes(System.Byte[],System.Collections.Generic.IList{System.Byte[]}@)"></member>
    <member name="T:Microsoft.BusinessData.Runtime.ISystemProxyGenerator">
      <summary>Represents an interface to handle the proxy generation.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemProxyGenerator.GenerateProxyAssembly(Microsoft.BusinessData.MetadataModel.ILobSystemStruct,Microsoft.BusinessData.MetadataModel.Collections.INamedPropertyDictionary)">
      <summary>Generates the proxy assembly for the given external system, with its given properties. </summary>
      <returns>Pair element either contains the proxy as a byte array or the assembly object.</returns>
      <param name="lobSystemStruct">The given external system.</param>
      <param name="lobSystemProperties">The given external system properties.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ISystemUtility">
      <summary>Represents the primary interface implemented by custom shims.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemUtility.CreateEntityInstanceDataEnumerator(System.Object,Microsoft.BusinessData.Runtime.ISharedEntityState)">
      <summary>Converts line-of-business data stream into an enumerator of raw AdapterObjects.</summary>
      <returns>An enumerator.</returns>
      <param name="rawStream">Line-of-business data stream to convert.</param>
      <param name="sharedEntityState">Shared state of EntityInstance that are going to be generated from the returned enumeration.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISystemUtility.DefaultConnectionManager">
      <summary>Gets the ConnectionManager instance that should be used with this system utility by default. This property should return null if the Shim is not capable of explicit connection management.
</summary>
      <returns>The ConnectionManager instance</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ISystemUtility.DefaultTypeReflector">
      <summary>Gets the TypeReflector instance that should be used with this SystemUtility by default. </summary>
      <returns>The TypeReflector instance.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ISystemUtility.ExecuteStatic(Microsoft.BusinessData.MetadataModel.IMethodInstance,Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.Object[],Microsoft.BusinessData.Runtime.IExecutionContext)">
      <summary>Executes a MethodInstance in the model against the given LobSystem instance with given parameters.</summary>
      <param name="mi">MethodInstance that is being executed.</param>
      <param name="si">LobSystemInstance which the method instance is being executed against.</param>
      <param name="args">Parameters of the method. The size of the parameter array is equal to the number of parameter objects in the method, and the values are going to be passed in order. Out and return parameters will be null.</param>
      <param name="context">ExecutionContext where this execution is happening in. This value will be null if ExecutionContext is not created.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.IUserInputFilter">
      <summary>Represents a filter with one or more values that can be set.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.IUserInputFilter.GetValueType">
      <summary>Returns the type of the value at the given index.</summary>
      <returns>The type of the value at the given index.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IUserInputFilter.Item(System.Int32)">
      <summary>Gets or sets value of the filter at the given index.</summary>
      <returns>The value of the filter at the given index.</returns>
      <param name="valueIndex">The given index.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.IUserInputFilter.ValueCount">
      <summary>Gets the number of values for this filter.</summary>
      <returns>The number of values for this filter.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.LobBusinessErrorException">
      <summary>Thrown when an error occurs during using the LobSystem.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobBusinessErrorException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobBusinessErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobBusinessErrorException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobBusinessErrorException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.
</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.LobGenericException">
      <summary>Represents an exception thrown when an error occurs in the line-of-business system during a method execution.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobGenericException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobGenericException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobGenericException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.LobGenericException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.
</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ObjectDeletedException">
      <summary>Thrown when you try to use an object that has been deleted.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectDeletedException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectDeletedException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectDeletedException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ObjectNotFoundException">
      <summary>Thrown when an object is not present.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectNotFoundException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectNotFoundException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.OperationMode">
      <summary>Specifies the parameters for an operation.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage)">
      <summary>Creates a new operation mode with a specified cache mode.</summary>
      <param name="cacheUsage">The specified cache mode.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage,System.Boolean)">
      <summary>Creates a new operation mode with specified cache mode, and optionally allowing partial data.</summary>
      <param name="cacheUsage">The cache mode to use.</param>
      <param name="allowPartialData">Whether to allow partial data or not.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage,System.TimeSpan)">
      <summary>Creates a new operation mode with specified cache usage and freshness criterion.</summary>
      <param name="cacheUsage">The cache mode to use.</param>
      <param name="freshness">The attempted freshness.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage,System.TimeSpan,System.Boolean)">
      <summary>Creates a new operation mode with specified cache usage, freshness criterion, and optionally accepting partial data.</summary>
      <param name="cacheUsage">The cache mode to use.</param>
      <param name="freshness">The attempted freshness.</param>
      <param name="allowPartialData">Whether to allow partial data or not.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(Microsoft.BusinessData.Runtime.CacheUsage,System.TimeSpan,System.Boolean,System.Boolean)">
      <summary>Creates a new operation mode with specified cache usage, freshness criterion, and optionally accepting partial data and ignoring conflicts.</summary>
      <param name="cacheUsage">The cache mode to use.</param>
      <param name="freshness">The attempted freshness.</param>
      <param name="allowPartialData">Whether to allow partial data or not.</param>
      <param name="doNotDetectConflicts">Whether to ignore conflicts or not.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(System.Boolean)">
      <summary>Creates a new operation mode optionally allowing partial data.</summary>
      <param name="allowPartialData">Whether to allow partial data or not.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.OperationMode.#ctor(System.Boolean,System.Boolean)">
      <summary>Creates a new operation mode optionally allowing partial data and/or ignoring conflicts.</summary>
      <param name="allowPartialData">Whether to allow partial data or not.</param>
      <param name="doNotDetectConflicts">Whether to ignore conflicts or not.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.AllowPartialData">
      <summary>Checks to see if the operation should return partial data.</summary>
      <returns>true if it should return partial data; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.CachedWithImmediateRefresh">
      <summary>Indicates that the item should be read from the back-end if available, and the cache should be refreshed.</summary>
      <returns>The operation mode of the item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.CachedWithoutRefresh">
      <summary>Indicates that the item should be read from the cache if it is available.</summary>
      <returns>The operation mode of the item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.CacheUsage">
      <summary>Determines how the cache should be used.</summary>
      <returns>Type: <see cref="T:Microsoft.BusinessData.Runtime.CacheUsage" />.The cache usage.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.DoNotDetectConflicts">
      <summary>Checks to see whether the conflicts should be ignored.</summary>
      <returns>Type: <see cref="T:System.Boolean" />.true if it should be ignored; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.Freshness">
      <summary>Determines how fresh the data is requested.</summary>
      <returns>Type: <see cref="T:System.TimeSpan" />.The time span of the data.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.Offline">
      <summary>Indicates that the item should be read from the cache. </summary>
      <returns>The operation mode of the item.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.OperationMode.Online">
      <summary>Indicates that the item should be read from the back-end. </summary>
      <returns>The operation mode of the item.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.PartialBulkReadException">
      <summary>Represents an exception thrown when BulkSpecificFinder returns fewer items than requested.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.#ctor(System.String,System.Exception,System.Collections.Generic.ICollection{Microsoft.BusinessData.Runtime.Identity},System.Collections.Generic.ICollection{Microsoft.BusinessData.Runtime.Identity})">
      <summary>Constructs a new instance of the class by using a message, the inner exception, and received and requested identities.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="requested">The requested identity collection, which represents the identities that are read.</param>
      <param name="received">The received identity collection, which represents the identities returned by the external system.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialBulkReadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets object data.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.PartialBulkReadException.ReceivedIdentities">
      <summary>Gets a list of received identities.</summary>
      <returns>The list of received identities.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.PartialBulkReadException.RequestedIdentities">
      <summary>Gets a list of Requested identities.</summary>
      <returns>The list of Requested identities.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.PartialCreateException">
      <summary>Represents an exception thrown when a CreateWithFields operation needs to execute both Create and UpdateMethodInstances, and execution of UpdateMehtodInstance has failed.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.#ctor(System.String,System.Exception,Microsoft.BusinessData.Runtime.Identity)">
      <summary>Constructs a new instance of the class by using a message, the inner exception, and the runtime identity.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
      <param name="identity">The runtime identity.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.PartialCreateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.PartialCreateException.Identity">
      <summary>Gets the runtime identity.</summary>
      <returns>The runtime identity.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.ProxyGenerationResult">
      <summary>Represents the results of proxy generation.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.ProxyGenerationResult.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.Assembly">
      <summary>Gets or sets the generated assembly.</summary>
      <returns>The generated assembly.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.CompiledBytes">
      <summary>Gets or sets the binary bytes of the compiled proxy code (which may represent one or more System.Reflection.Assemblies).</summary>
      <returns>The binary bytes of the compiled proxy code.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.Fingerprint">
      <summary>Gets or sets the fingerprint or conceptual signature of the proxy, which may be used as a unique key with which to cache the result.</summary>
      <returns>The fingerprint or the conceptual signature of the proxy.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.IsValid">
      <summary>Determines whether the result is valid.</summary>
      <returns>true if the result is valid; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.ProxyGenerationResult.SourceCode">
      <summary>Gets or sets the source code of the proxy.</summary>
      <returns>The source code of the proxy.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.RuntimeException">
      <summary>Represents any exception thrown during runtime.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.RuntimeException.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.RuntimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the class by using the serialization information and the streaming context.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.RuntimeException.#ctor(System.String)">
      <summary>Constructs a new instance of the class with a message string.</summary>
      <param name="message">The message string.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.RuntimeException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the class by using a message and the inner exception.</summary>
      <param name="message">The message string.</param>
      <param name="inner">The inner exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.SsoAuthenticationException">
      <summary>Thrown when a single sign-on (SSO) related authentication problem occurs, such as when credentials obtained from SSO are being rejected by the back end.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a specified error message.</summary>
      <param name="message">The specified error message.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.#ctor(System.String,System.Exception,System.String,System.Uri)">
      <summary>Initializes a new instance of the class with a specified error message, a reference to the inner exception that caused this exception, and the URL that contains the credentials.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The inner exception that caused the current exception.</param>
      <param name="targetApplication">The target application.</param>
      <param name="credentialEntryUrl">The URL that contains the credentials.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.SsoAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Deserializes the exception object.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.BusinessData.Runtime.SsoAuthenticationException.TargetApplication">
      <summary>Gets the target application.</summary>
      <returns>The target application.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException">
      <summary>Thrown when too many instances are returned.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException.#ctor">
      <summary>Initializes a new instance of the exception class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the exception class with serialized data and a streaming context.</summary>
      <param name="info">The serialization information that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The streaming context that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException.#ctor(System.String)">
      <summary>Initializes a new instance of the exception class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.BusinessData.Runtime.TooManyInstancesReturnedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the exception class with a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The inner exception that caused the current exception. </param>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol">
      <summary>Represents a wrapper implementation of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> class where the implementation sets the implementation's credentials by reading the metadata defined in the external system instance object.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.#ctor">
      <summary>Constructs a new instance of the class.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.BdcHttpCustomHeaderCollection">
      <summary>Gets the custom header collection.</summary>
      <returns>The custom header collection.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Overrides the implementation of the BeginInvoke method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class.</summary>
      <returns>The asynchronous result.</returns>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
      <param name="asyncState">The asynchronous state.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
      <summary>Overrides the implementation of the EndInvoke method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class.</summary>
      <returns>The object array.</returns>
      <param name="asyncResult">The asynchronous result.</param>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ExtensionType">
      <summary>Gets or sets the extension type.</summary>
      <returns>The extension type.</returns>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.GetWebRequest(System.Uri)">
      <summary>Overrides the base class functionality to add custom HTTP headers.</summary>
      <returns>The Web request.</returns>
      <param name="uri">The URI of the Web service.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.GetWebResponse(System.Net.WebRequest)">
      <summary>Overrides the GetWebReponse method of the SoapHttpClientProtocol base class and provides the ThrottledWebResponse object.</summary>
      <returns>The Web response.</returns>
      <param name="request">The Web request.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.Invoke(System.String,System.Object[])">
      <summary>Overrides the implementation of the Invoke method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class.</summary>
      <returns>The output object array.</returns>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
      <summary>Overrides the implementation of the InvokeAsync method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class.</summary>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
      <summary>Overrides the implementation of the InvokeAsync method of the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> base class.</summary>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
      <param name="userState">The user state.</param>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.LobSystemInstance">
      <summary>Gets or sets the external system instance object.</summary>
      <returns>The external system instance object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol.ThrottledWebResponseType">
      <summary>Gets or sets the ThrottledWebResponseType object.</summary>
      <returns>The ThrottledWebResponseType object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension">
      <summary>Represents an extension interface for the <see cref="T:Microsoft.BusinessData.SystemSpecific.BdcSoapHttpClientProtocol" /> class.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Begins the invocation of a method.</summary>
      <returns>Returns <see cref="T:System.IAsyncResult" />.The asynchronous result.</returns>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
      <param name="asyncState">The asynchronous state.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.EndInvoke(System.IAsyncResult)">
      <summary>Ends the invocation of a method.</summary>
      <returns>Returns <see cref="T:System.Object" />.The output object array.</returns>
      <param name="asyncResult">The asynchronous result.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.Invoke(System.String,System.Object[])">
      <summary>Invokes a method with the method name and returns the output.</summary>
      <returns>The output object array.</returns>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter array.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
      <summary>Invokes an asynchronous operation by using the method name, the parameter object array, and the callback function.</summary>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IBdcSoapHttpClientProtocolExtension.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
      <summary>Invokes an asynchronous operation by using the method name, the parameter object array, the callback function, and the user state.</summary>
      <param name="methodName">The method name.</param>
      <param name="parameters">The parameter object array.</param>
      <param name="callback">The callback function.</param>
      <param name="userState">The user state.</param>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.IContextProperty">
      <summary>Represents an interface that enables retrieval of the Business Data Connectivity (BDC) service.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IContextProperty.ExecutionContext">
      <summary>Gets or sets the execution context set by the caller.</summary>
      <returns>The execution context set by the caller.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IContextProperty.LobSystemInstance">
      <summary>Gets or sets the external system instance object for the calling method.</summary>
      <returns>The external system instance object.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IContextProperty.MethodInstance">
      <summary>Gets or sets the MethodInstance object for the calling method.</summary>
      <returns>The MethodInstance object.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.IStreamingAdapterObject">
      <summary>Represents an interface that is implemented by all shims that need to support information streaming.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.IStreamingAdapterObject.GetStream">
      <summary>Gets the information stream.</summary>
      <returns>The stream.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.IUsernamePassword">
      <summary>Represents an interface for customizing implementations of SOAP header authentications for the Windows Communication Foundation (WCF) connector.</summary>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IUsernamePassword.Password">
      <summary>Gets or sets a password credential secure string.</summary>
      <returns>The password credential secure string.</returns>
    </member>
    <member name="P:Microsoft.BusinessData.SystemSpecific.IUsernamePassword.UserName">
      <summary>Gets or sets a user name credential secure string.</summary>
      <returns>The user name credential secure string.</returns>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.ThrottleScope">
      <summary>Defines the scope of the throttling.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.Global">
      <summary>Global. (=0)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.Database">
      <summary>A database system type. (=1)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.WebService">
      <summary>Web service system type. (=2)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.Wcf">
      <summary>Windows Communication Foundation (WCF) system type. (=3)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleScope.Custom">
      <summary>A custom system type. (=4)</summary>
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.ThrottleType">
      <summary>Specifies the type of throttling to perform on a <see cref="T:Microsoft.BusinessData.SystemSpecific.ThrottleScope" /> object.</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.None">
      <summary>No throttling is done. (=0)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.Items">
      <summary>Throttling is based on the number of items that are returned from the external system. (=1)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.Size">
      <summary>Throttling is based on the amount of data that is returned from the external system. (=2)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.Connections">
      <summary>Throttling is based on the number of connections that are opened to the external system. (=3)</summary>
    </member>
    <member name="F:Microsoft.BusinessData.SystemSpecific.ThrottleType.Timeout">
      <summary />
    </member>
    <member name="T:Microsoft.BusinessData.SystemSpecific.Wcf.IWcfBindingProvider">
      <summary>Represents an interface that is required to implement a user-generated proxy.</summary>
    </member>
    <member name="M:Microsoft.BusinessData.SystemSpecific.Wcf.IWcfBindingProvider.CreateBinding(Microsoft.BusinessData.MetadataModel.ILobSystemInstance,System.ServiceModel.Channels.Binding)">
      <summary>Creates and returns a binding that is combined with a supplied implementation ClientBase and Endpoint address URI to generate a proxy.</summary>
      <returns>A binding combined with a supplied implementation ClientBase and Endpoint address URI. 
</returns>
      <param name="lobSystemInstance">The external system instance object.</param>
      <param name="existingBinding">The existing binding or can be null.</param>
    </member>
  </members>
</doc>